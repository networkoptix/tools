package com.nx.apidoc;

/**
 * Base class for mechanisms which require knowledge about Apidoc Comments, both
 * for generation and parsing.
 */
public abstract class ApidocComment
{
    // TODO: Consider defining default "format" and the description of its values in the C++ code.
    protected static final String DEFAULT_FORMAT_DESCRIPTION =
        "Data format. Default value is \"json\".";

    protected static final String TAG_APIDOC = "%apidoc";
    protected static final String TAG_PRIVATE = "%//";
    protected static final String TAG_CAPTION = "%caption";
    protected static final String TAG_PERMISSIONS = "%permissions";
    protected static final String TAG_PARAM = "%param";
    protected static final String TAG_VALUE = "%value";
    protected static final String TAG_RETURN = "%return";

    protected static final String ATTR_PROPRIETARY = "[proprietary]";
    protected static final String ATTR_OPT = "[opt]";
    protected static final String ATTR_DEFAULT = "[default]";

    protected static final String PARAM_FORMAT = "format";

//-------------------------------------------------------------------------------------------------
// Apidoc comment format

    // ATTENTION: This specification should be kept in sync with the current implementation,
    // because currently it is the only documentation for the Apidoc comment format.
    
    // - Introduction
    //
    // Apidoc comments are C++ comments from which the Rest API documentation XML is generated by
    // the Java-based command-line tool "apidoctool". Currently, each such comment is placed in the
    // C++ code before the respective API method registration line. In future, certain portions of 
    // documentation can be moved to the corresponding API data structs and/or other places to 
    // avoid duplication.

    // - Syntax
    //
    // The format of Apidoc comments is designed to resemble Javadoc/Doxygen, but using "%" for 
    // tags instead of "@" to differentiate from Javadoc/Doxygen.
    //
    // Each API method documentation begins with the header tag.
    //
    // Then follows the possibly multi-line description.
    // 
    // Then follow "%param" tags for method arguments. Params which are JSON objects are documented
    // with inner "%value" tags).
    //
    // Then follows "%return" tag for method result. For POST method, the result can be a JSON
    // object documented with inner "%param" and "%value" tags.
    //
    // Apidoc comment ends with "*/" on a dedicated line.
    //
    // Apidoc comment grammar shown using XML spec notation (NOTE: this grammar can be formally
    // inacurate but gives a good understanding of the syntax):
    //
    // S ::= (#x20)+
    // TextLine ::= S* "*" (S Char+)?
    // MethodName ::= ("/api/" | "/ec2/") [_A-Za-z0-9]+
    // Header ::= S* "/**%apidoc" "[proprietary]"? S ("GET" | "POST") S MethodName
    // TagName ::= "caption" | "permissions" | "param" | "value" | "return"
    // TagAttr ::= "proprietary" | "opt" | "default"
    // Tag ::= S* "*" S+ "%" TagName ("[" TagAttr "]")? (S Char+ (NewLine TextLine)*)?
    // Footer ::= S* "*/"
    // ApidocComment ::= Header (NewLine TextLine)* (NewLine Tag)* Footer
    //
    // - Semantics of attributes
    //
    // Attribute "[proprietary]" may appear in "%apidoc" and "%param". It means that the item
    // (whole API method or a particular param) should be excluded from generated XML.
    //
    // Attribute "[opt]" may appear only in "%param" and marks optional params.
    //
    // Attribute "[default]" may appear only in "%param" with the description "format":
    // %param[default] format
    // This line inserts into XML a hard-coded text which describes the "format" parameter which
    // is common to many API methods and defines the format (JSON, UBJSON, etc) of the requested
    // data.
    
    // - Apidoc comment example

    /**%apidoc[proprietary] GET /ec2/someMethod
     * Description, possibly multi-line (continuation lines not indented).
     * %caption Some caption, optional. Possibly multi-line, continuation lines indented.
     * %permissions Description of permissions required for the API method, optional.
     * %param someParam Description. Possibly multi-line, continuation lines indented.
     * %param[default] format
     * %param[proprietary] Proprietary param (always optional).
     * %param[opt] isEnabled Param description.
     *     %value true Description of "true" value.
     *     %value false Description of "false" value.
     * %return Return object in the requested format.
     *     %param ...
     *         %value ...
     * %// Tag with comment, not intended to appear in generated XML. Can appear anywhere.
     */
}
