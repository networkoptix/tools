# Configure package providers
- name: Use amd64 architecture
  lineinfile:
    dest: /var/lib/dpkg/arch
    line: amd64
    create: yes

# TODO Move i386 packages into separate file
- name: Use i386 architecture
  lineinfile:
    dest: /var/lib/dpkg/arch
    line: i386
    create: yes

- name: Install Ubuntu Toolchain repository
  apt_repository:
    repo: ppa:ubuntu-toolchain-r/test
    state: present

- name: Install Mercurial repository
  apt_repository:
    repo: ppa:mercurial-ppa/releases
    state: present
  when: ansible_distribution_release == 'trusty'

- name: Install all packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
  # Common
  - software-properties-common
  - python-software-properties
  - bzip2
  - unzip
  - xz-utils
  - wget
  - less
  - nano
  - mc
  - screen
  # java requirements
  - ca-certificates-java
  - libasound2
  - openjdk-8-jdk-headless # android
  # python
  - python-dev
  - python-pip
  - python-virtualenv
  # Junk Shop requirements
  - libpq-dev
  - gdb
  # Build System common
  - rsync
  - ninja-build
  # Build packages start #??
  # zlib
  - zlib1g-dev
  # openal
  - libopenal-dev
  # mesa
  - mesa-common-dev
  - libgl1-mesa-dev
  - libglu1-mesa-dev
  # ldap
  - libldap2-dev
  # xfixes
  - libxfixes-dev
  # x11 screen saver extension lib
  - libxss-dev
  # gstreamer
  - libgstreamer0.10-0
  - libgstreamer-plugins-base0.10-0
  # unit tests requirements
  - libgstreamer-plugins-base1.0-0
  - libpulse-mainloop-glib0
  # xslt
  - libxslt1.1
  # installer
  - zip
  - fakeroot
  # Build packages end
  # x86 cross-compilers
  - libc6:i386
  - libncurses5:i386
  - libstdc++6:i386
  - lib32z1
  # multilib, linux-x86 compiler on x86 platform
  - gcc-multilib
  - g++-multilib
  # i386 gstreamer
  - libgstreamer0.10-0:i386
  - libgstreamer-plugins-base0.10-0:i386
  # i386 x
  - libxrender1:i386
  - libxcomposite1:i386
  # i386 other
  - libglib2.0-dev:i386
  - libopenal-dev:i386
  - libglu1-mesa:i386
  - libldap2-dev:i386
  - libxss-dev:i386
  - libxfixes-dev:i386
  - libxslt1.1:i386
  - libpng12-0:i386
  # functional tests
  - python-demjson
  - python-opencv

  # Ubuntu Toolchain packages
  - gcc-7
  - g++-7
  - gcc-7-multilib
  - g++-7-multilib

  - mercurial

  # TODO Move NodeJS packages into separate file
  # Install webadmin build requirements (npm, nodejs and Co)
  - git
  - npm
  - ruby-compass
  - python-yaml

- name: Install N for NodeJS
  npm:
    name: n
    global: yes

- name: Install NodeJS
  command: n stable
  register: r
  changed_when: "'installed' in r.stdout"

- name: Remove apport
  apt:
    name: apport
    state: absent

- name: Set Kernel core pattern for system
  lineinfile:
    path: /etc/sysctl.conf
    create: yes
    state: present
    insertafter: EOF
    line: "kernel.core_pattern=%e.core.%t.%p"
  notify: reload sysctl

- name: Set network limits
  lineinfile:
    path: /etc/sysctl.conf
    create: yes
    state: present
    insertafter: EOF
    line: "{{ item }}"
  notify: reload sysctl
  with_items:
    - "net.ipv4.ip_local_port_range=18000    65535"
    - "net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait=1"
    - "net.netfilter.nf_conntrack_tcp_timeout_established=600"

- name: Set limits for user
  lineinfile:
    path: /etc/security/limits.conf
    create: yes
    state: present
    insertafter: EOF
    line: "{{ item }}"
  with_items:
  # NOTE: these values are copied from old slave
  # maximum number of open files
  - "{{ build_user }} soft nofile 65535"
  - "{{ build_user }} hard nofile 65535"
  # limits the core file size (KB)
  - "{{ build_user }} soft core unlimited"
  - "{{ build_user }} hard core unlimited"

- name: Check CMake version
  become: yes
  become_method: sudo
  shell: cmake --version
  register: check_cmake_version
  changed_when: false
  failed_when: false
  check_mode: no

- name: Install cmake
  shell: curl -sSL https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz | sudo tar -xzC /opt
  when: check_cmake_version.rc != 0

- name: Install cmake
  shell: sudo ln -s -f /opt/cmake-3.12.3-Linux-x86_64/bin/cmake /usr/bin/cmake
  when: check_cmake_version.rc != 0
