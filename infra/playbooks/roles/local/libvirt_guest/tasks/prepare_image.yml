- name: Clean previous data
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  # TODO: should we prune it?
  - "{{ libvirt_guest__system_image_file }}"
  delegate_to: "{{ libvirt_host }}"
  when: libvirt_guest__current_state == 'undefined'

- name: Get stat for base image
  become: true
  become_method: sudo
  stat:
    path: "{{ libvirt_guest__storage_pool_path }}/{{ libvirt_guest__base_image }}"
  delegate_to: "{{ libvirt_host }}"
  register: stat_result

- name: >-
    Ensure base image is available (must be present in storage pool) {{
    libvirt_guest__storage_pool_path }}/{{ libvirt_guest__base_image }}
  assert:
    that:
    - stat_result.stat.exists == True

- name: Copy guest disk image
  copy:
    src: "{{ libvirt_guest__storage_pool_path }}/{{ libvirt_guest__base_image }}"
    dest: "{{ libvirt_guest__system_image_file }}"
    remote_src: yes
  delegate_to: "{{ libvirt_host }}"
  when: >-
    libvirt_guest__copy_on_write is undefined or
    libvirt_guest__copy_on_write == False

- name: Create qcow2 guest disk image with backing file (copy-on-write)
  command: >-
    qemu-img create -f qcow2 -o
    backing_file={{ libvirt_guest__storage_pool_path }}/{{ libvirt_guest__base_image }}
    {{ libvirt_guest__system_image_file }}
  args:
    creates: "{{ libvirt_guest__system_image_file }}"
  delegate_to: "{{ libvirt_host }}"
  when: >-
    libvirt_guest__copy_on_write is defined and
    libvirt_guest__copy_on_write == True

- name: Resize guest system disk image
  command: >-
    qemu-img resize {{ libvirt_guest__system_image_file }}
    +{{ libvirt_guest__extra_system_image_size_gb }}GB
  delegate_to: "{{ libvirt_host }}"

- name: Prepare cloud-init media
  include_role:
    name: libvirt_guest_init_linux
    tasks_from: prepare
  when: libvirt_guest__type == 'linux'

- name: Prepare win-init media
  include_role:
    name: libvirt_guest_init_windows
    tasks_from: prepare
  when: libvirt_guest__type == 'windows'
