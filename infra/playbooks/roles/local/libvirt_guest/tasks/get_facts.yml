- name: "Check status of {{ libvirt_guest__hostname }}"
  virt:
    name: "{{ libvirt_guest__hostname }}"
    command: status
    uri: "{{ libvirt_connection }}"
  register: domstate
  failed_when: false
  delegate_to: "{{ libvirt_host }}"

- name: "Set fact libvirt_guest__current_state for {{ libvirt_guest__hostname }}"
  set_fact:
    libvirt_guest__current_state: "{{ domstate.status }}"
  when: domstate.status is defined


- name: "Set fact libvirt_guest__current_state for {{ libvirt_guest__hostname }}"
  set_fact:
    libvirt_guest__current_state: "undefined"
  when: domstate.status is undefined

- name: Wait for VM connection
  become: false
  wait_for_connection:
    sleep: 1
    delay: 0
  when: "libvirt_guest__current_state == 'running'"

- name: Gather facts if guest is running
  setup:
  when: "libvirt_guest__current_state == 'running'"
  failed_when: false

- name: Get domain xml
  command: "virsh dumpxml {{ libvirt_guest__hostname }}"
  register: dumpxml
  changed_when: false
  failed_when: false
  delegate_to: "{{ libvirt_host }}"
  when: "libvirt_guest__state != 'undefined'"

- name: Register domain.xml as fact
  set_fact:
    domain_xml: "{{ dumpxml.stdout }}"
  when: dumpxml is defined
