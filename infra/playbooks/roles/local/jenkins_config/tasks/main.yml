- name: Query plugins
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script: |
      println(Jenkins.instance.pluginManager.plugins)
    args: {}
  register: result
  changed_when: false

- name: Installed plugins
  debug:
    msg: "{{ result.output}}"

- name: Set frontend url
  when: false  #FIXME: uncomment when jenkins have it's hostname
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_frontend_url.groovy')}}"
    args:
      frontend_url: "{{ jenkins_hostname }}"
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Set system message
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_system_message.groovy')}}"
    args:
      system_message: ""
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Set Markup formatter (OWASP plugin)
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_markup_formatter.groovy')}}"
    args:
      formatter: "raw_html"
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Set SCM properties (quiet period and retry counts)
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_scm_properties.groovy')}}"
    args:
      quiet_period: 5
      scm_checkout_retry_count: 0
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Set admin email address
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_admin_email.groovy')}}"
    args:
      admin_email: vfedorov@networkoptix.com
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Set jnlp port
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_jnlp_properties.groovy')}}"
    args:
      jnlp_slave_port: -1
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Setup master as build node
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_master_build_props.groovy')}}"
    args:
      master_executors: 20
      master_labels: ""
      master_usage: "NORMAL"  # TODO: check one of NORMAL, EXCLUSIVE
  register: result
  changed_when: "'Configuration changed' in result.output"

- name: Add username & password credentials
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_creds_username_password.groovy')}}"
    args: "{{ item }}"
  register: result
  changed_when: "'Configuration changed' in result.output"
  with_items: "{{ jenkins_user_password_credentials }}"

- name: Add SSH credentials (direct entry)
  jenkins_script:
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    script:  "{{lookup('file', 'set_creds_ssh_key.groovy')}}"
    args: "{{ item }}"
  register: result
  changed_when: "'Configuration changed' in result.output"
  with_items: "{{ jenkins_user_direct_ssh_pks }}"
