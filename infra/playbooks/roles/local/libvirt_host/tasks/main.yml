---
- include_tasks: "{{ ansible_distribution | lower }}_install_libvirtd.yml"

- name: Enable and start libvirtd service
  service:
    name: libvirtd
    state: started
    enabled: yes


- name: Test libvirtd operational
  shell: virt-host-validate
  register: result
  failed_when: >
    'FAIL' in result.stdout | default("")
  changed_when: false

# https://www.linuxtechi.com/enable-nested-virtualization-kvm-centos-7-rhel-7/
- name: Configure kvm to enable nested virtualization
  copy:
    content: |
      options kvm-intel nested=y
      options kvm-intel enable_shadow_vmcs=1
      options kvm-intel enable_apicv=1
      options kvm-intel ept=1
    dest: /etc/modprobe.d/kvm-intel.conf
  register: mod_kvm_intel_conf

# Don't fail here.
# The problem is that kvm could not be reloaded while VMS are running
# Automatic stop/start is not acceptable..
# TODO: write some message?
- name: Reload mods
  become: True
  become_method: sudo
  command: rmmod kvm-intel
  when: mod_kvm_intel_conf.changed
  failed_when: false

- name: Reload mods
  become: True
  become_method: sudo
  command: modprobe kvm-intel
  when: mod_kvm_intel_conf.changed
  failed_when: false

# TODO Add section with user permissions related to libvirt if needed
# libvirt-related groups are: libvirt, kvm

# FIXME: Task with disabling iptables is not applied sometimes with first run.
# We need to figure out why. Workaround: run playbook one more time.
# Flushing hanlers is a workaround for this problem: ensure that pending stuff
# is trigered before buggy block.
- name: Trigger all pending handlers
  meta: flush_handlers

- name: Disable iptables on bridges 
  sysctl:
    name: '{{ item }}'
    value: 0
    state: present
  with_items: 
  - net.bridge.bridge-nf-call-ip6tables
  - net.bridge.bridge-nf-call-iptables 
  - net.bridge.bridge-nf-call-arptables