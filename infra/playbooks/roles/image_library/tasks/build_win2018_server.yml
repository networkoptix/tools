- name: "Create working dir"
  file:
    path: "{{ packer_home }}"
    state: directory

- name: Get packer from Hashicorp site (too old version in Debian repo)
  unarchive:
    src: https://releases.hashicorp.com/packer/1.2.1/packer_1.2.1_linux_amd64.zip
    dest: "{{ packer_home }}"
    remote_src: yes
    validate_certs: no # FIXME there is some problem w/ certs

- name: Prepare mount for windows drivers
  file:
    path: "{{ packer_home }}/drivers"
    state: directory

- name: Mount drivers
  mount:
    path: "{{ packer_home }}/drivers"
    src: "{{ libvirt_pool }}/virtio-win_amd64.vfd"
    state: mounted
    opts: loop,ro
    fstype: auto

- name: Prepare packer configuration for win2016server
  copy:
    src: files/win2016server.json
    dest: "{{ packer_home }}/win2016server.json"

- name: Prepare packer variables for win2016server
  copy:
    src: files/win2016server.vars.json
    dest: "{{ packer_home }}/win2016server.vars.json"

- name: Copy autounattend scripts for windows installation (w/o templating)
  copy:
    src: files/floppy
    dest: "{{ packer_home }}/floppy"
    directory_mode: yes

- name: Check created image
  stat:
    path: "{{ libvirt_pool }}/win2016server-base.qcow2"
  register: base_image

- name: Build Windows base image (may take a lot of time)
  command: >-
    {{ packer_home }}/packer build
    -force
    -color=false
    -var-file=win2016server.vars.json
    -only=qemu
    win2016server.json
  args:
    chdir: "{{ packer_home }}"
    creates: "{{ packer_home }}/output-qemu/win2016server-base"
  when: base_image.stat.exists == False or force_rebuild_win_server == True
  register: packer

- name: Copy created image to libvirt images pool
  copy:
    src:  "{{ packer_home }}/output-qemu/win2016server-base"
    dest: "{{ libvirt_pool }}/win2016server-base.qcow2"
    remote_src: yes
  when: base_image.stat.exists == False or packer.changed == True
