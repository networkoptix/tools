<domain type='{{ kvm_guest__domain_type }}'>
  <name>{{ kvm_guest__hostname }}</name>
  <memory unit='KiB'>{{ kvm_guest__memory_kib }}</memory>
  <vcpu placement='static'>{{ kvm_guest__cpus }}</vcpu>
  <resource>
    <partition>/machine</partition>
  </resource>
  <os>
    <type arch='x86_64' machine='pc-i440fx-2.8'>hvm</type>
{% for dev in kvm_guest__boot_devices %}
    <boot dev='{{ dev }}'/>
{% endfor %}
  </os>
  <features>
    <acpi/>
    <apic/>
    <vmport state='off'/>
  </features>
  <cpu mode='custom' match='exact'>
    <model fallback='forbid'>Broadwell</model>
  </cpu>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-kvm</emulator>
{% if kvm_guest__graphics is defined and kvm_guest__graphics == true %}
    <graphics type='spice' autoport='yes'/>
{% endif %}
{% for disk in kvm_guest__disks %}
    <disk type='file' device='{{ disk.device }}'>
      <driver name='qemu' type='{{ disk.driver_type }}'/>
      <source file='{{ disk.source_file }}'/>
{%   if disk.target_bus | lower == 'virtio' %}
      <target dev='vd{{ "abcdefghijklmnopqrstuvwxyz"[loop.index0] }}' bus='{{ disk.target_bus }}'/>
{%   elif disk.target_bus | lower == 'sata'
       or disk.target_bus | lower == 'scsi'
       or disk.target_bus | lower == 'sd' %}
      <target dev='sd{{ "abcdefghijklmnopqrstuvwxyz"[loop.index0] }}' bus='{{ disk.target_bus }}'/>
{%   elif disk.target_bus | lower == 'ide' %}
      <target dev='hd{{ "abcdefghijklmnopqrstuvwxyz"[loop.index0] }}' bus='{{ disk.target_bus }}'/>
{%   endif %}
{%   if disk.readonly is defined and disk.readonly == true %}
      <readonly/>
{%   endif %}
    </disk>
{% endfor %}

{% for network in networks %}
    <interface type='direct'>
      <source dev='{{network.bridge_source_dev}}' mode='bridge'/>
      <model type='{{network.bridge_model_type}}'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x{{network.bridge_address_slot}}' function='0x0'/>
    </interface>
{% endfor %}
    <channel type='unix'>
      <source mode='bind' path='/var/lib/libvirt/qemu/channel/target/domain-12-debian9/org.qemu.guest_agent.0'/>
      <target type='virtio' name='org.qemu.guest_agent.0' state='disconnected'/>
      <alias name='channel0'/>
      <address type='virtio-serial' controller='0' bus='0' port='1'/>
    </channel>
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
  </devices>
</domain>
