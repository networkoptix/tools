- builder:
    name: run-scalability-tests
    # Required template variables:
    #   test-select-expr (argument for -k, if not empty)
    #   test-list (space-delimited; empty means run all tests)
    #   test-timeout-hours
    #
    # Required environment variables:
    #   JUNK_SHOP_CAPTURE_DB (user:password@host[:port])
    #   AUTOTEST_EMAIL_PASSWORD
    #   JUNKSHOP_PROJECT_NAME
    #   BIN_DIR
    #   WORK_DIR
    #   EXECUTOR_NUMBER
    #   BRANCH
    #   BUILD_IDENTITY
    #   CUSTOMIZATION

    builders:
    - shell: |
        #!/bin/bash
        echo '****************************************************************************************************'
        echo '*   use-lightweight-servers: {use-lightweight-servers}'
        echo '*   server-count: {server-count}'
        echo '****************************************************************************************************'
        set -ex

        # https://stackoverflow.com/questions/1527049/join-elements-of-an-array
        function join_by {{
          local d=$1
          shift
          echo -n "$1"
          shift
          printf "%s" "${{@/#/$d}}"
        }}

        test -d "$BIN_DIR"
        mkdir -p "$WORK_DIR"

        # TODO: convert to EXTRA_OPTIONS and test-list and merge w/ functests
        # to merge:
        # --tests-config-file=$WORKSPACE/test-config.yaml \
        # --test-parameters=$TEST_PARAMETERS \
        # --run-parameters=$RUN_PARAMETERS \
        # tests/scalability_test.py

        PARAMETERS=(
          "use_lightweight_servers={use-lightweight-servers}"
          "server_count={server-count}"
          "storages_per_server={storages-per-server}"
          "cameras_per_server={cameras-per-server}"
          "users_per_server={users-per-server}"
          "properties_per_camera={properties-per-camera}"
          "merge_timeout={merge-timeout}"
        )
        RUN_PARAMETERS="$(join_by ',' ${{PARAMETERS[@]}})"
        TEST_PARAMETERS="scalability_test.$(join_by ',scalability_test.' ${{PARAMETERS[@]}})"

        VM_PORT_BASE=20000  # base for REST API ports forwarded from vm to host
        VM_PORT_RANGE=100  # how many forwarded ports one functional tests run may require, max
        VM_PORT=$(($VM_PORT_BASE + $EXECUTOR_NUMBER * $VM_PORT_RANGE))
        VM_NAME_PREFIX="funtest-$EXECUTOR_NUMBER-"

        source venv/bin/activate

          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop
          export PYTEST_PLUGINS=junk_shop.pytest_plugin

          : ${{JUNK_SHOP_CAPTURE_DB:?}}  # reporting DB to be used by tests
          : ${{AUTOTEST_EMAIL_PASSWORD:?}}  # password for cloud accont

          cd nx_vms/func_tests

            export PYTEST_DEFAULTS_SECTION=ci  # init CI config

            if [[ "{test-select-expr}" != "" ]]; then
              EXTRA_OPTIONS="-k \"{test-select-expr}\""
            else
              EXTRA_OPTIONS=""
            fi

            pytest \
              --work-dir=$WORK_DIR \
              --bin-dir=$BIN_DIR \
              --mediaserver-installers-dir=$WORKSPACE/dist \
              --mediaserver-dist-path="$(echo $WORKSPACE/dist/*-server-*.deb)" \
              --customization=$CUSTOMIZATION \
              --cloud-group=$CLOUD_GROUP \
              --timeout=$(({test-timeout-hours} * 60*60)) \
              --capture-db=$JUNK_SHOP_CAPTURE_DB \
              --build-parameters=project=$JUNKSHOP_PROJECT_NAME,branch=$BRANCH,build_num=$BUILD_IDENTITY,platform=linux-x64,customization=$CUSTOMIZATION \
              --vm-port-base=$VM_PORT \
              --vm-name-prefix=$VM_NAME_PREFIX \
              --slot=$EXECUTOR_NUMBER \
              --reinstall \
              -v \
              --run-name=scalability \
              --tests-config-file=$WORKSPACE/test-config.yaml \
              --test-parameters=$TEST_PARAMETERS \
              --run-parameters=$RUN_PARAMETERS \
              tests/scalability_test.py

- builder:
    name: scalability-tests-block
    builders:
    - run-scalability-tests:
        test-select-expr: ''
        use-lightweight-servers: '{use-lightweight-servers}'
        server-count: '{server-count}'
        storages-per-server: 1
        cameras-per-server: 20
        users-per-server: 4
        properties-per-camera: 5
        merge-timeout: 2h
        test-timeout-hours: 4 # '{test-timeout-hours}'
