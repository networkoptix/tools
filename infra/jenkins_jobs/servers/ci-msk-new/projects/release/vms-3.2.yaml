- project:
    name: release-pipeline-3.2

    project: vms

    version:
    - vms_3.2:
        default_branch: vms_3.2
        use_nx_vms_commit: vms_3.2  # FIXME: this is temp fix

    # SECTION. GLOBAL PIPELINE CONFIG
    # ============================================================

    max_concurrent_runners: 2

    # comma-separated list of emails to whom send notifications related to builds
    build_watchers: iremizov@networkoptix.com

    # Some cmake args are applicable for any builds they are applied at first
    # Run cmake -L / cmake -LH / cmake -LAH to see all configuration options
    cmake_configure_args_global: >-
      -Dbeta=TRUE
      -DdeveloperBuild=OFF
      -DcloudGroup=test

    # SECTION. PIPELINE CONFIG
    # ============================================================

    pipeline:
    - release:
        # Pipeline-specific cmake arguments
        cmake_configure_args_pipeline: ''
        pipeline_priority: 9

    # SECTION. PLATFORM CONFIG
    # ============================================================

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    platform:
    # there is also edge1 platform, it's declared and commented in jobs section
    - linux-x64:
        # most of builds are linux cross-builds that built on "build-installer-linux"
        # here we make an anchor to avoid typos and other kind of missconfiguration in future
        installer_build_node: &linux_node build-installer-linux
        # There are some CMake args that aplicable only for particular platform
        cmake_configure_args_platform: >-
          -G Ninja
        cmake_build_extra_args: >-
          -- -j 20
    - linux-x86:
        installer_build_node: *linux_node
        cmake_configure_args_platform: >-
          -G Ninja
          -DtargetDevice=linux-x86
    - bananapi:
        installer_build_node: *linux_node
        cmake_configure_args_platform: >-
          -G Ninja
          -DtargetDevice=bananapi
          -DwithTests=OFF
    - bpi:
        installer_build_node: *linux_node
        cmake_configure_args_platform: >-
          -G Ninja
          -DtargetDevice=bpi
    - rpi:
        installer_build_node: *linux_node
        cmake_configure_args_platform: >-
          -G Ninja
          -DtargetDevice=rpi
    # - tx1:
    #     installer_build_node: *linux_node
    #     cmake_configure_args_platform: >-
    #       -G Ninja
    #       -DtargetDevice=tx1
    # + edge1

    # -- windows platform --
    # FIXME: HOME,PATH and other vars are represented as win env.
    # But some other vars are linux-like.
    # Rsync goes mad ain result and nothing works.
    - windows-x64: &windows_config
        installer_build_node: build-installer-windows-hw-sign
        cmake_configure_args_platform: >-
          -G 'Visual Studio 15 2017 Win64'
          -DaddQtPdb=ON
          -DtrustedTimestamping=$TRUSTED_TIMESTAMPING
          -DhardwareSigning=$HARDWARE_SIGNING
          -DtargetDevice=windows-x64
          -T host=x64

    - windows-x86:
        <<: *windows_config
        cmake_configure_args_platform: >-
          -G 'Visual Studio 15 2017'
          -DaddQtPdb=ON
          -DtrustedTimestamping=$TRUSTED_TIMESTAMPING
          -DhardwareSigning=$HARDWARE_SIGNING
          -DwithTests=ON

    # -- apple platform --

    - mac: &osx_config
        installer_build_node: build-installer-mac
        use_webadmin: false
        cmake_configure_args_platform: >-
          -G Ninja
          -DcodeSigning=OFF
        cmake_build_extra_args: >-
          -- -j 10
    # SECTION. CUSTOMIZATION CONFIG
    # ============================================================

    # TODO: There are some customization that may be build only on specific platform
    # there is no need to generate extra set of jobs that never gonna be triggered.
    # it looks like there are too few customization spec. cmake args and we may move such
    # rare customizations to platform enum.

    cmake_configure_args_customization: >-
      -Dcustomization=$CUSTOMIZATION

    customization:

    # TODO: Enable later when we'll be ready to test it.

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    - default
    - default_cn
    - default_zh_CN
    - cox
    - digitalwatchdog
    - digitalwatchdog_global
    - hanwha
    - ipera
    - ionetworks
    - nutech
    - ras
    - senturian
    - systemk
    - tricom
    - ust
    - vista
    - vmsdemoblue
    - vmsdemoorange
    - metavms
    - xccelo

    # list of jobs to generate
    jobs:

    # TRIGGERS - main entry points

    - manual-trigger:
        preset:
        - nightly:
            detailed_job_description: |-
              This trigger serves for nigtly clean builds to verify the state of product
              It builds with corresponding schedule "{timer}".

              It should not be triggered manually excluding debugging of infra problems
              associated with only this trigger type.
            default_build_description: >-
              Nightly clean build for all platforms and customizations
              triggered automatically by timer
            platforms: linux-x64,linux-x86,bananapi,windows-x86,windows-x64,mac,edge1,bpi,rpi,tx1
            customizations: default,hanwha,vista,digitalwatchdog
            clean_workspace: true
            timer: '' # temp. isabled, was '0 0 * * 1-5'
        - custom:
            detailed_job_description: |-
              This trigger serves for custom builds.
              For example, you may want to verify that Jenkins works properly and can
              successfully rebuild some successful build.
            default_build_description: >-
              Manually triggered
            platforms: linux-x64,linux-x86,bananapi,windows-x86,windows-x64,mac,edge1,bpi,rpi,tx1
            # TODO: rework defaults to accept space-separated values, and add >- here
            # TODO: split into default-selected and full-list
            customizations: default,default_cn,default_zh_CN,cox,digitalwatchdog,digitalwatchdog_global,hanwha,ipera,ionetworks,nutech,ras,senturian,systemk,tricom,ust,vista,vmsdemoblue,vmsdemoorange,metavms,xccelo

    # RUNNER - root launcher of all builds

    - '{pipeline}.{version}.{project}.runner':
        default_platforms: linux-x64,linux-x86,windows-x86
        default_customizations: default,hanwha

    # REGISTRIES

    - '{pipeline}.{version}.{project}.register-build'

    # BUILD AND TEST - main jobs

    - '{pipeline}.{version}.{project}.webadmin.universal.build'
    - installer-build
    # Edge1 is a platform that's exclusive for digitalwatchdog.
    # add extra jobs for edge1 with digitalwatchdog customization
    - installer-build:
        platform:
        - edge1:
            installer_build_node: *linux_node
            cmake_configure_args_platform: >-
              -G Ninja
              -DtargetDevice=edge1
        customization:
        - 'digitalwatchdog'
    # NOTE: If extra UT combinations are added, don't forget to add them in runner
