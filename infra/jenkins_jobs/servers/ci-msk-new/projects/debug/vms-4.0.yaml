- project:
    name: debug-pipeline-4.0
    __debug__: true

    project: vms

    version:
    - vms:
        default_branch: vms
        use_nx_vms_commit: vms  # FIXME: this is temp fix

    realcameratesting_framework_branch: vms
    build_webadmin_concurrently: false

    # SECTION. GLOBAL PIPELINE CONFIG
    # ============================================================

    max_concurrent_runners: 3

    # comma-separated list of emails to whom send notifications related to builds
    build_watchers: ''

    # Some cmake args are applicable for any builds they are applied at first
    # Run cmake -L / cmake -LH / cmake -LAH to see all configuration options
    cmake_configure_args_global: >-
      -Dbeta=TRUE
      -DdeveloperBuild=OFF
      -DcloudGroup=test

    # SECTION. PIPELINE CONFIG
    # ============================================================

    pipeline:
    - debug:
        junkshop_project_name: debug
        # Pipeline-specific cmake arguments
        cmake_configure_args_pipeline: ''
        pipeline_priority: 1

    # SECTION. PLATFORM CONFIG
    # ============================================================

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    platform:
    # there is also edge1 platform, it's declared and commented in jobs section
    - linux-x64:
        # most of builds are linux cross-builds that built on "build-installer-linux"
        # here we make an anchor to avoid typos and other kind of missconfiguration in future
        distribution_build_node: &linux_node build-installer-linux
        # There are some CMake args that aplicable only for particular platform
        cmake_configure_args_platform: >-
          -G Ninja
        cmake_build_extra_args: >-
          -- -j 20
    - bpi:
        distribution_build_node: *linux_node
        cmake_configure_args_platform: >-
          -G Ninja
          -DtargetDevice=bpi

    # -- windows platform --

    - windows-x64: &windows_config
        distribution_build_node: build-installer-windows
        cmake_configure_args_platform: >-
          -G 'Visual Studio 15 2017 Win64'
          -DcodeSigning=OFF
          -DtargetDevice=windows-x64
          -T host=x64

    # -- apple platform --

    - mac: &osx_config
        distribution_build_node: build-installer-mac
        use_webadmin: false
        cmake_configure_args_platform: >-
          -G Ninja
          -DcodeSigning=OFF
        cmake_build_extra_args: >-
          -- -j 10
    # SECTION. CUSTOMIZATION CONFIG
    # ============================================================

    # TODO: There are some customization that may be build only on specific platform
    # there is no need to generate extra set of jobs that never gonna be triggered.
    # it looks like there are too few customization spec. cmake args and we may move such
    # rare customizations to platform enum.

    cmake_configure_args_customization: >-
      -Dcustomization=$CUSTOMIZATION

    customization:

    # TODO: Enable later when we'll be ready to test it.

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    - default

    # list of jobs to generate
    jobs:

    - manual-trigger:
        preset:
        - custom:
            detailed_job_description: |-
              This trigger serves for custom builds.
              For example, you may want to verify that Jenkins works properly and can
              successfully rebuild some successful build.
            default_build_description: >-
              Manually triggered
            platforms: linux-x64,windows-x64,mac,bpi
            customizations: default

    # RUNNER - root launcher of all builds

    - '{pipeline}.{version}.{project}.runner':
        default_platforms: linux-x64,linux-x86,windows-x86
        default_customizations: default,hanwha

    # REGISTRIES

    - '{pipeline}.{version}.{project}.register-build'

    # BUILD AND TEST - main jobs

    - '{pipeline}.{version}.{project}.webadmin.universal.build'
    - distribution-build
    - '{pipeline}.{version}.{project}.distribution.{customization}.functest':
        customization: default
        build_watchers: anikitin@networkoptix.com,gsovetov@networkoptix.com,vfedorov@networkoptix.com
    - '{pipeline}.{version}.{project}.distribution.{customization}.scalability-test':
        customization: default
        build_watchers: vfedorov@networkoptix.com
    - '{pipeline}.{version}.{project}.distribution.{customization}.scaletest':
        customization: default
        build_watchers: vfedorov@networkoptix.com
    - '{pipeline}.{version}.{project}.distribution.{customization}.realcameratest':
        customization: default
        build_watchers: muskov@networkoptix.com

    # Our tests work per-customization per-platform and not yet implemented
    # for all platforms, so list of jobs is reduced
    # NOTE: If extra UT combinations are added, don't forget to add them in runner
    - distribution-build-with-unittests:
        # TODO: Rework a bit this parameterization as well as probably build node parameterization
        platform:
        - linux-x64:
            unittest_node: unittests-linux
        - mac:
            unittest_node: unittests-mac
        - windows-x64:
            unittest_node: unittests-windows
        customization:
        - default

    - preset:
        preset-name:
        - custom:
            vms_build_choice_default: 'VMS_NEW_BUILD_BY_COMMIT'
            vms_build_choice_option_default: ''
            ut_enabled: 'ON'
            ft_enabled: 'ON'
            ft_commit_choice_default: FT_STABLE_PUSH_OR_NIGHTLY
            ft_commit_choice_option_default: ''
            rct_enabled: 'ON'
            rct_commit_choice_default: RCT_STABLE_PUSH_OR_NIGHTLY
            rct_commit_choice_option_default: ''
            st_enabled: 'OFF'
            st_commit_choice_default: ST_BY_COMMIT
            st_commit_choice_option_default: 'vms'
            default_platforms: linux-x64
            default_customizations: default
        - on-push-vms:
            vms_build_choice_default: 'VMS_NEW_BUILD_BY_COMMIT'
            vms_build_choice_option_default: ''
            ut_enabled: 'ON'
            ft_enabled: 'OFF'
            ft_commit_choice_default: FT_STABLE_PUSH_OR_NIGHTLY
            ft_commit_choice_option_default: ''
            rct_enabled: 'OFF'
            rct_commit_choice_default: RCT_STABLE_PUSH_OR_NIGHTLY
            rct_commit_choice_option_default: ''
            st_enabled: 'OFF'
            st_commit_choice_default: ST_BY_COMMIT
            st_commit_choice_option_default: 'vms'
            default_platforms: linux-x64
            default_customizations: default
        - on-push-ft:
            vms_build_choice_default: 'VMS_EXISTING_BUILD_FROM_STABLE_PUSH'  # VMS_EXISTING_BUILD_FROM_STABLE_PUSH_OR_NIGHTLY
            vms_build_choice_option_default: ''
            ut_enabled: 'OFF'
            ft_enabled: 'ON'
            ft_commit_choice_default: FT_STABLE_PUSH
            ft_commit_choice_option_default: ''
            rct_enabled: 'OFF'
            rct_commit_choice_default: RCT_STABLE_PUSH
            rct_commit_choice_option_default: ''
            st_enabled: 'OFF'
            st_commit_choice_default: ST_BY_COMMIT
            st_commit_choice_option_default: 'vms'
            default_platforms: bpi
            default_customizations: default
            test_list: self_tests
            test_select_expr: 'windows or smb'
        - on-push-rct:
            vms_build_choice_default: 'VMS_EXISTING_BUILD_FROM_STABLE_PUSH'  # VMS_EXISTING_BUILD_FROM_STABLE_PUSH_OR_NIGHTLY
            vms_build_choice_option_default: ''
            ut_enabled: 'OFF'
            ft_enabled: 'OFF'
            ft_commit_choice_default: FT_STABLE_PUSH
            ft_commit_choice_option_default: ''
            rct_enabled: 'ON'
            rct_commit_choice_default: RCT_STABLE_PUSH
            rct_commit_choice_option_default: ''
            st_enabled: 'OFF'
            st_commit_choice_default: ST_BY_COMMIT
            st_commit_choice_option_default: 'vms'
            default_platforms: bpi
            default_customizations: default
        - vms-nightly:
            vms_build_choice_default: 'VMS_NEW_BUILD_BY_COMMIT'
            vms_build_choice_option_default: 'vms'
            ut_enabled: 'ON'
            ft_enabled: 'OFF'
            ft_commit_choice_default: FT_STABLE_PUSH_OR_NIGHTLY
            ft_commit_choice_option_default: ''
            rct_enabled: 'OFF'
            rct_commit_choice_default: RCT_STABLE_PUSH_OR_NIGHTLY
            rct_commit_choice_option_default: ''
            st_enabled: 'ON'
            st_commit_choice_default: ST_BY_COMMIT
            st_commit_choice_option_default: 'vms'
            default_platforms: linux-x64
            default_customizations: default
        # - nightly:
        #     vms_build_choice_default: 'VMS_EXISTING_BUILD_FROM_STABLE_NIGHTLY'
        #     vms_build_choice_option_default: ''
        #     ft_commit_choice_default: FT_STABLE_PUSH
        #     ft_commit_choice_option_default: ''
        #     rct_commit_choice_default: FT_STABLE_PUSH
        #     rct_commit_choice_option_default: ''
        #     default_platforms: bpi
        #     default_customizations: default
        # - nightly:
        #     vms_build_choice_default: 'VMS_EXISTING_BUILD_FROM_STABLE_NIGHTLY'
        #     vms_build_choice_option_default: ''
        #     ft_commit_choice_default: FT_STABLE_PUSH
        #     ft_commit_choice_option_default: ''
        #     rct_commit_choice_default: FT_STABLE_PUSH
        #     rct_commit_choice_option_default: ''
        #     default_platforms: bpi
        #     default_customizations: default

    - param-resolver
    - hg-trigger:
        repo: nx_vms
        branch: vms
        version: vms
