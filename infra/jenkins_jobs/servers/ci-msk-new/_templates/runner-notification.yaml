- job-template:
    name: '{pipeline}.helper.build-notification' # FIXME: rename
    description: |
      <pre>
      ================================================================================
      Build notification
      ================================================================================

      JOB MAINTAINERS
        {job_maintainers}
        (notified by email on build failures)

      --------------------------------------------------------------------------------
      </pre>
    node: reporter
    concurrent: false
    workspace: !j2: '{{ "__debug__" if __debug__ else "" }}{{ pipeline }}-ut-notification'

    properties:
    - authorization-{pipeline}-system
    - priority-sorter:
        priority: !j2: '{{ pipeline_priority }}'
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 500
        artifact-days-to-keep: 10
        artifact-num-to-keep: 500

    parameters:
    - p_REQUESTED_BY
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_BRANCH
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT
    - p_RUNNER_URL
    - p_PIPELINE(hidden):
        default: '{pipeline}'

    wrappers:
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - cleaners/custom-clean-workspace:
            keep_files: [ devtools, venv ]
        - mercurial/import-repo-if-missing:
            name: devtools
            branch: default
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE

    scm:
    - mercurial/local-mirror:
        name: devtools
        revision: 'default'

    builders:
    - mercurial/mark-successful-checkout
    - inject:
        properties-content: |
          JUNKSHOP_URL={junkshop_base_url}/project/{junkshop_project_name}/$BRANCH/$BUILD_IDENTITY
          REPOSITORY_URL={artifacts_base_url}/$PIPELINE/$BRANCH/$BUILD_IDENTITY/$CUSTOMIZATION/$PLATFORM
    - decorators/set-custom-build-description
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true

    - shell: |
        #!/bin/bash
        set -ex

        if [ ! -d venv ]; then
          virtualenv --system-site-packages venv
        fi

        source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r devtools/ci/junk_shop/requirements.txt

          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop

          JUNK_SHOP_DB=$JUNK_SHOP_DB_CREDENTIALS@{junkshop_db_host}

          BUILD_PARAMETERS=(
            "project={junkshop_project_name}"
            "branch=$BRANCH"
            "build_num=$BUILD_IDENTITY"
            )

          devtools/ci/junk_shop/junk_shop/make_html_build_report.py \
            --junk-shop-db="$JUNK_SHOP_DB" \
            --build-parameters "${{BUILD_PARAMETERS[@]}}" \
            > _report.html
          # report contains trash in the first line.
          tail -n +2 _report.html > report.html

    publishers:
    - mercurial/rm-repo-if-broken
    - archive:
        artifacts: 'report.html'
        allow-empty: 'false'
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>
    - email-ext:
        aborted:        true
        failure:        true
        still-failing:  true
        success:        true
        always:         true

        # ---- email contents ----
        send-to:
        # - recipients # todo: enable later
        - requester
        # recipients: '{email-recipients}'
        subject: '[Jenkins] $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT ($BUILD_DESCRIPTION)'
        content-type: 'html'
        body: !j2: |
          ${FILE,path="report.html"}
        # ---- email contents ----
    # - cleaners/custom-clean-workspace:
    #     keep_files: [ devtools, venv ]
