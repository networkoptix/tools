- job-template:
    name: '{pipeline}.{version}.preset.{preset-name}'
    id: 'preset'
    node: runner
    concurrent: true

    timer: ''  # no timed trigger by default

    properties:
    - authorization-{pipeline}-trigger

    parameters:

    # FIXME:
    - p_BRANCH:
        default: '{default_branch}'
    - p_BUILD_DESCRIPTION:
        default: !j2: '{{ build_description | default("Triggered manually") }}'

    - parameter-separator/simple-colored:
        header: 'Options for VMS'
        color: lavender
    - p_VMS_BUILD_CHOICE_w_OPTION:
        default: '{vms_build_choice_default}'
        option_default: '{vms_build_choice_option_default}'
    # - better-single-select:
    #     name: VMS_BUILD_FROM_PIPELINE
    #     choices:
    #     - [ debug,   "Debug - Jenkins testing" ]
    #     - [ develop, "Development - CI and nightly builds" ]
    #     - [ custom,  "Custom - feature testing" ]
    #     - [ release, "Release - builds intended to be published" ]
    #     default: '{pipeline}'
    - p_PLATFORMS:
        default: !j2: '{{ default_platforms | default("") }}'
    - p_CUSTOMIZATIONS:
        default:  !j2: '{{ default_customizations | default("") }}'

    - p_CLOUD_GROUP:
        default: test
    - p_HARDWARE_SIGNING:
        default: 'OFF'
    - p_TRUSTED_TIMESTAMPING:
        default: 'OFF'
    - p_CUSTOM_CMAKE_PARAMETERS:
        default: ''

    - parameter-separator/simple-colored:
        header: 'Options for Unittests'
        color: lavender
    - on-off-option:
        name: UT_ENABLED
        description: If ON, then UnitTests will run, otherwise skipped
        default: '{ut_enabled}'

    - parameter-separator/simple-colored:
        header: 'Options for Functional tests'
        color: lavender

    - on-off-option:
        name: FT_ENABLED
        subject: If ON, then FuncTests will run, otherwise skipped
        default: '{ft_enabled}'
    - p_FT_COMMIT_CHOICE_w_OPTION:
        default: '{ft_commit_choice_default}'
        option_default: '{ft_commit_choice_option_default}'
    - p_TEST_SELECT_EXPR:
        default: !j2: '{{ test_select_expr | default("") }}'
    - p_TEST_LIST:
        default: !j2: '{{ test_list | default("") }}'

    - parameter-separator/simple-colored:
        header: 'Options for Real cameras tests'
        color: lavender
    - on-off-option:
        name: RCT_ENABLED
        subject: If ON, then RealCameraTests will run, otherwise skipped
        default: '{rct_enabled}'
    - p_RCT_COMMIT_CHOICE_w_OPTION:
        default: '{rct_commit_choice_default}'
        option_default: '{rct_commit_choice_option_default}'
    - string:
        name: RCT_CAMERA_FILTER
        default:  !j2: '{{ rct_camera_filter | default("*") }}'
        description:

    - parameter-separator/simple-colored:
        header: 'Options for Scalability tests'
        color: lavender
    - on-off-option:
        name: ST_ENABLED
        subject: If ON, then SacalbilityTests will run, otherwise skipped
        default: '{st_enabled}'
    - p_ST_COMMIT_CHOICE_w_OPTION:
        default: '{st_commit_choice_default}'
        option_default: '{st_commit_choice_option_default}'

    # TODO: Add additional sections and options...
    # - parameter-separator/simple-colored:
    #     header: 'Extra options'
    #     color: lavender
    # - string:
    #     name: EMAIL_NOTIFY_CC
    #     default: ''
    #     description: Add reciepients for email notification. You will receive email anyways.

    triggers:
    - timed: "{timer}"

    wrappers:
    - timestamps

    builders:
    - cleaners/custom-clean-workspace:
        keep_files: [ devtools, nx_vms ]
    - decorators/set-custom-build-description
    - queue/cancel-scheduled-runner-job:
        cancel: true
    - trigger-builds:
      - project: '__{pipeline}.{version}.param-resolver'
        block: true
        current-parameters: true
        predefined-parameters: |
          REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
    - copyartifact:
        project: '__{pipeline}.{version}.param-resolver'
        filter: 'RUNNER_ARGS.envvars'
        which-build: last-completed
        parameter-filters: REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
    - shell: cat RUNNER_ARGS.envvars
    - inject:
        properties-file: 'RUNNER_ARGS.envvars'
    - shell: |
        #!bash
        echo "BUILD_IDENTITY=$BUILD_IDENTITY" >> BUILD_IDENTITY.envvar
        # TODO: Change these argnames!!!
        echo "NX_VMS_COMMIT=$NX_VMS_COMMIT" >> NX_VMS_COMMIT.envvar
        echo "NX_FUNCTESTS_COMMIT=$NX_FUNCTESTS_COMMIT" > NX_FUNCTESTS_COMMIT.envvar
        echo "NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT" >> NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT.envvar

    - trigger-builds:
      - project: '{pipeline}.{version}.vms.runner'
        block: true
        property-file: RUNNER_ARGS.envvars
        predefined-parameters: !j2: |
          REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
          UPSTREAM_JOB_NAME=$JOB_NAME
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          REPLACE_BUILD_WITH_NEWER={{ replace_build_with_newer | default("YES") }}

    publishers:
    - archive:
        artifacts: '*.envvars'
        allow-empty: 'false'
        fingerprint: true
    - archive:
        artifacts: '*.envvar'
        allow-empty: 'false'
        fingerprint: true
