- job-template:
    name: '{pipeline}.{version}.{project}.distribution.default.realcameratest'
    id: realcamera
    description: |
      Run real camera tests for default for branch {version}.
    node: '{realcameratest_node}'
    concurrent: false

    binaries_url: 'rsync://noptix.enk.me/buildenv/test/'
    workspace: !j2: '{{ "__debug__" if __debug__ else ""
      }}realcameratest-thr${EXECUTOR_NUMBER}'
    run_realcameratests_concurrently: true

    workdir: 'realcameratests.$BUILD_NUMBER'

    test_select_expr: not windows and not smb
    test_list: ''

    properties:
    - authorization-{pipeline}-system
    - priority-sorter:
        priority: !j2: '{{ pipeline_priority }}'
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default_artifact_num_to_keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_BUILD_IDENTITY
    - p_CLEAN_WORKSPACE
    - p_BRANCH:
        default: '{version}'
    - p_NX_VMS_COMMIT
    - string:
        name: NX_TEST_FRAMEWORK_COMMIT
    - string: # TODO: convert to p_**
        name: RCT_CAMERA_FILTER
        default: '*'
    - p_PIPELINE(hidden):
        default: '{pipeline}'
    - p_CUSTOMIZATION(hidden):
        default: 'default'
    - p_PLATFORM(hidden):
        default: all

    wrappers:
    - timestamps
    - timeout:
        timeout: 300 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
    - workspace-cleanup:
        check-parameter: CLEAN_WORKSPACE
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - mercurial/import-repo-if-missing:
            name: devtools
            branch: default
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: $PIPELINE
            basedir: $WORKSPACE
        - mercurial/import-repo-if-missing:
            name: nx_vms
            branch: '$BRANCH'
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: $PIPELINE
            basedir: $WORKSPACE
    scm:
    - mercurial/local-mirror:
        name: nx_vms
        revision: '$NX_TEST_FRAMEWORK_COMMIT'
    - mercurial/local-mirror:
        name: devtools
        revision: default

    builders:
    - mercurial/mark-successful-checkout

    - functests/rct/reboot-switch

    - inject:
        properties-content: |
          JUNKSHOP_URL={junkshop_base_url}/project/{junkshop_project_name}/$BRANCH/$BUILD_IDENTITY
          REPOSITORY_URL={artifacts_base_url}/$PIPELINE/$BRANCH/$BUILD_IDENTITY/$CUSTOMIZATION/$PLATFORM
    - decorators/set-custom-build-description

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT test@$NX_TEST_FRAMEWORK_COMMIT'
        macro: true
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - functests/kill-hanged

    - shell: |
        #!/bin/bash
        set -ex
        rm -rf   "build" "dist" "{workdir}"
        mkdir -p "build" "dist" "{workdir}"
        rm -f unstable.flag

    - inject:
        properties-content: |
          BIN_DIR=$WORKSPACE/bin
          WORK_DIR=$WORKSPACE/{workdir}

    - trigger-builds:
      - project: '{pipeline}.helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=linux-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-linux64*.deb,bin/appserver2_ut
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - file-operations/file-copy-operation:
        includes: >-
          build/distrib/*-server-*-linux64*.deb,
          build/distrib/*-server-*-win64*.exe,
          build/bin/appserver2_ut
        excludes: ''
        target-location: '$WORKSPACE/dist'
        flatten-files: 'true'

    - shell: |
        #!/bin/bash
        set -ex
        mkdir -p "$WORK_DIR"

        if [ ! -d venv ]; then
          virtualenv venv
        fi

        source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r devtools/ci/junk_shop/requirements.txt
          pip install --upgrade -r nx_vms/func_tests/requirements.txt

          export PYTHONPATH="$WORKSPACE/devtools/ci/junk_shop"
          export PYTEST_PLUGINS=junk_shop.pytest_plugin

          TEST_TIMEOUT="$(( 60 * 60 ))" # 60 min

          pushd nx_vms/func_tests

            set +e
            export PYTEST_DEFAULTS_SECTION=ci  # init CI config
            pytest \
              --work-dir="$WORK_DIR" \
              --bin-dir="$BIN_DIR" \
              --mediaserver-installers-dir="$WORKSPACE/dist" \
              --timeout="$TEST_TIMEOUT" \
              --slot="$EXECUTOR_NUMBER" \
              --reinstall \
              --rct-camera-filter="$RCT_CAMERA_FILTER" \
              real_camera_tests/test_server.py::test_cameras

            pytest_status="X$?"
          popd

          case "$pytest_status" in
          X0)
            echo "PyTest - All tests were collected and passed successfully"
            rm -f unstable.flag
            exit 0
          ;;
          X1)
            echo "PyTest - Tests were collected and run but some of the tests failed"
            touch unstable.flag
            exit 0
          ;;
          X2)
            echo "PyTest - Test execution was interrupted by the user"
            exit 2
          ;;
          X3)
            echo "PyTest - Internal error happened while executing tests"
            exit 3
          ;;
          X4)
            echo "PyTest - pytest command line usage error"
            exit 4
          ;;
          X5)
            echo "PyTest - 	No tests were collected"
            exit 5
          ;;
          esac

    publishers:
    - mercurial/rm-repo-if-broken
    - set-unstable-if-marked
    - description-setter:
        regexp: "'PyTest - (.*)'"
        regexp-for-failed: "'PyTest - (.*)'"
    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on: [ SUCCESS, UNSTABLE, FAILURE ]
          build-steps:
          - trigger-builds:
            - project: '{pipeline}.helper.publish-tests'
              predefined-parameters: |
                REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                BUILD_STATUS=passed
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                BRANCH=$BRANCH
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                LOCAL_PATH=$WORKSPACE/
                COMPONENTS={workdir}/
                NODE_SSH_CONNECTION=$SSH_CONNECTION
                SSH_USER=$USER
              block: true
              block-thresholds:
                failure-threshold: FAILURE

    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on: [ SUCCESS, UNSTABLE, FAILURE ]
          build-steps:
          - trigger-builds:
            - project: '{pipeline}.helper.realcameratest-reporter'
              block: false
              predefined-parameters: |
                REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                BRANCH=$BRANCH
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                RCT_COMPONENT={workdir}

    - failure-email:
        email-recipients: '{build_watchers}'
    - fixed-email:
        email-recipients: '{build_watchers}'
