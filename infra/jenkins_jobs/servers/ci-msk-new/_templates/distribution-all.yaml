- job-template:
    name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.all'
    id: distribution-all
    project-type: multijob

    node: runner
    concurrent: true

    properties:
    - authorization-{pipeline}-system
    - priority-sorter:
        priority: !j2: '{{ pipeline_priority }}'
    - throttle:
        max-total: 5
        option: project
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default_artifact_num_to_keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_WORKSPACE:
        default: false
    - p_CLEAN_CLONE
    - p_CLEAN_BUILD:
        default: false
    - p_BUILD_IDENTITY
    - p_BRANCH:
        default: '{default_branch}'
    - p_NX_VMS_COMMIT:
        default: '{default_branch}'
    - p_RUN_UNITTESTS:
        default: true
    - p_RUNNER_URL
    - p_CLOUD_GROUP:
        default: test
    - p_HARDWARE_SIGNING:
        default: 'OFF'
    - p_TRUSTED_TIMESTAMPING:
        default: 'OFF'
    - p_CUSTOM_CMAKE_PARAMETERS:
        default: ''
    - p_PIPELINE(hidden):
        default: '{pipeline}'
    - p_CUSTOMIZATION(hidden):
        default: '{customization}'
    - p_PLATFORM(hidden):
        default: '{platform}'

    wrappers:
    - timestamps
    # note: DO NOT ADD any timeouts here. Put them in corresponding child jobs.

    builders:
    - inject:
        properties-content: |
          JUNKSHOP_URL={junkshop_base_url}/project/{junkshop_project_name}/$BRANCH/$BUILD_IDENTITY
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true
    - decorators/set-custom-build-description

    - multijob:
        name: "Build installer for {platform} with {customization}"
        projects:
        - name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.build'
          kill-phase-on: FAILURE
          predefined-parameters: |
            REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_CLONE=$CLEAN_CLONE
            CLEAN_BUILD=$CLEAN_BUILD
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            RUNNER_URL=$RUNNER_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING

    - multijob:
        name: Run tests (tests are optional, only existing jobs are built)
        condition: COMPLETED # allow unstable
        projects:
        - name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.unittest'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$RUN_UNITTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_CLONE=$CLEAN_CLONE
            CLEAN_BUILD=$CLEAN_BUILD
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            RUNNER_URL=$RUNNER_URL
