- project:
    name: develop-pipeline-meta

    project: meta-vms
    junk_shop_host: junkshop.enk.me
    junkshop_db_host: '10.0.0.113'

    branch: meta

    # SECTION. GLOBAL PIPELINE CONFIG
    # ============================================================

    # comma-separated list of emails to whom send notifications related to builds
    build-watchers: mshevchenko@networkoptix.com

    # block builds and wait for reporting job to report results
    synchronous-reporting: '' # false

    # Some cmake args are applicable for any builds they are applied at first
    # Run cmake -L / cmake -LH / cmake -LAH to see all configuration options
    cmake_configure_args_global: |
      CMAKE_EXECUTABLE=cmake
      CMAKE_ARG_beta=TRUE
      CMAKE_ARG_developerBuild=OFF
      CMAKE_ARG_cloudGroup=test
      CMAKE_ARG_rdepSync=ON
      CMAKE_ARG_customWebAdminPackageDirectory=$WORKSPACE/$WEBADMIN_COMPONENT_NAME
      # CMAKE_ARG_withTests=TRUE

    # SECTION. PIPELINE CONFIG
    # ============================================================

    pipeline:
    - develop:
        junkshop_project_name: ci
        # Pipeline-specific cmake arguments
        cmake_configure_args_pipeline:
          CMAKE_ARG_CMAKE_BUILD_TYPE=Release

    # SECTION. PLATFORM CONFIG
    # ============================================================

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    platform:
    # there is also edge1 platform, it's declared and commented in jobs section
    - linux-x64:
        # most of builds are linux cross-builds that built on "build-installer-linux"
        # here we make an anchor to avoid typos and other kind of missconfiguration in future
        installer-build-node: &linux_node build-installer-linux
        # There are some CMake args that aplicable only for particular platform
        cmake_configure_args_platform: |
          CMAKE_GENERATOR=Ninja

    - tx1:
        installer-build-node: *linux_node
        cmake_configure_args_platform: |
          CMAKE_GENERATOR=Ninja
          CMAKE_ARG_targetDevice=tx1

    # -- windows platform --
    # FIXME: HOME,PATH and other vars are represented as win env.
    # But some other vars are linux-like.
    # Rsync goes mad ain result and nothing works.
    - windows-x64: &windows_config
        installer-build-node: build-installer-windows
        cmake_configure_args_platform: |
          CMAKE_ENV__MSPDBSRV_ENDPOINT_=executor-$EXECUTOR_NUMBER
          CMAKE_GENERATOR=Visual Studio 15 2017 Win64
          CMAKE_ARG_beta=ON
          CMAKE_ARG_codeSigning=OFF
          CMAKE_ARG_withClouds=OFF
          CMAKE_ARG_withPluginStubs=OFF
          CMAKE_ARG_withTests=ON
          CMAKE_ARG_targetDevice=windows-x64
          CMAKE_TOOL=host=x64

    # SECTION. CUSTOMIZATION CONFIG
    # ============================================================

    # TODO: There are some customization that may be build only on specific platform
    # there is no need to generate extra set of jobs that never gonna be triggered.
    # it looks like there are too few customization spec. cmake args and we may move such
    # rare customizations to platform enum.

    cmake_configure_args_customization: |
      CMAKE_ARG_customization=$CUSTOMIZATION

    customization:

    # TODO: Enable later when we'll be ready to test it.

    # REMINDER: runner will not change list of subprojects when
    # extra items are added or removed, so don't forget to change runner
    # template according to changes made here
    - metavms

    # list of jobs to generate
    jobs:

    - polling-trigger:
        preset:
        - on-push:
            detailed-job-description: |-
              This trigger serves for automatic builds on every push to remote repository
            default-build-description: >-
              Triggered on push event
            platforms: linux-x64,windows-x64,tx1
            customizations: metavms
            poll-scm-timer: '* * * * *'
            freeze-commit-now: true
            ignore-functests: 'true'
    - custom-trigger:
        preset:
        - custom:
            detailed-job-description: |-
              This trigger serves for custom builds.
              For example, you may want to verify that Jenkins works properly and can
              successfully rebuild some successful build.
            default-build-description: >-
              Manually triggered
            platforms: linux-x64,windows-x64,tx1
            customizations: metavms
            freeze-commit-now: true

    # RUNNER - root launcher of all builds

    - '{pipeline}.{branch}.{project}.runner':
        default-platforms: linux-x64,windows-x64,tx1
        default-customizations: metavms

    # REGISTRIES

    - '{pipeline}.{branch}.{project}.register-build'

    # BUILD AND TEST - main jobs

    - '{pipeline}.{branch}.{project}.webadmin.universal.build'
    - '{pipeline}.{branch}.{project}.distribution.{platform}.{customization}.all'
    - '{pipeline}.{branch}.{project}.distribution.{platform}.{customization}.build'

    # Our tests work per-customization per-platform and not yet implemented
    # for all platforms, so list of jobs is reduced
    - 'installer-unittests-linux':
        # TODO: Rework a bit this parameterization as well as probably build node parameterization
        platform:
        - linux-x64:
            unittest-node: unittests-linux
        customization:
        - metavms
    - installer-unittests-windows:
        platform:
        - windows-x64:
            unittest-node: unittests-windows
        customization:
        - metavms
