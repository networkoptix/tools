- job-template:
    name: '{pipeline}.{branch}.{project}.webadmin.universal.build'
    project-type: multijob
    description: |
      <pre>
      ================================================================================
      Build Web Admin
      ================================================================================

      JOB MAINTAINERS
        {job-maintainers}
        (NOT notified by email on build failures)
      BUILD WATCHERS
        {build-watchers}
        (notified by email on build failures)

      SOURCES
        devtools/infra/jenkins_jobs/servers/templates/webadmin-build.yaml

      --------------------------------------------------------------------------------

      This job builds webadmin that's not consumed independently but will be
      included in installer for all platforms.
      Despite the fact that this is linux project it's assigned to have
      "universal" platform with "default" customization in order to be put into
      repository with logically correct path.

      --------------------------------------------------------------------------------

      This job consumes few groups of parameters.

      Parameters related to workspace cleaning logic
      * CLEAN_WORKSPACE
      * CLEAN_CLONE
      * CLEAN_BUILD


      Parameters related to pointing artifacts in repository and development process
      * BUILD_IDENTITY (that determines release id or build_number used for releases)
      * NX_VMS_COMMIT exact commit of sources taht produced this build.

      --------------------------------------------------------------------------------
      </pre>

    node: '{webadmin-build-node}'
    concurrent: true
    workspace: 'nx_build_thr${{EXECUTOR_NUMBER}}-webadmin-{branch}/'

    synchronous-reporting: '' # false
    webadmin-build-node: webadmin-build
    webadmin-platform: universal
    webadmin-customization: default

    # artifacts to save in jenkins

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_WORKSPACE:
        default: false
    - p_CLEAN_CLONE
    - p_CLEAN_BUILD:
        default: false
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT:
        default: '{branch}'
    - p_RUNNER_URL

    wrappers:
    # NOTE: There is a bug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          CUSTOMIZATION={webadmin-customization}
          PLATFORM={webadmin-platform}

    - timestamps
    - timeout:
        # normally, should complete in 7-15 min
        timeout: 30 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN_WORKSPACE
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: '{branch}'
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE

    scm:
    - hg-local:
        name: nx_vms
        revision: '$NX_VMS_COMMIT'

    builders:
    - set-hg-marker-successful-checkout
    - inject:
        properties-content: |
          JUNKSHOP_HOST={junk_shop_host}
          JUNKSHOP_DB_HOST={junkshop_db_host}
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
    - set-custom-build-description
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true

    - conditionally-clean-dir:
        condition-varname: CLEAN_BUILD
        dir: build

    - file-delete-operation:
        includes: 'webadmin-build.log'
        excludes: ''

    - shell: |
        #!bash
        set -ex

        SECONDS=0
        rm -f 'webadmin-build.log' # TODO: remove it in prep env
        test ! -f 'webadmin-build.log'
        nx_vms/webadmin/build.sh 2>&1 | tee 'webadmin-build.log'
        ec="${{PIPESTATUS[0]}}"
        echo "Took $SECONDS seconds"
        # Abort if first cmd in pipe failed
        test "X${{ec}}" == "X0"

    publishers:
    - delete-hg-repos(if-damaged)
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>
    - archive:
        artifacts: 'webadmin-build.log,static/version.txt'
        allow-empty: 'false'
        fingerprint: true

    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - SUCCESS
          - UNSTABLE
          - FAILURE
          build-steps:
          # Don't publish anything if build even didn't start
          - conditional-step:
              condition-kind: file-exists
              condition-filename: 'webadmin-build.log'
              condition-basedir: workspace
              steps:
              - trigger-builds:
                - project: '{pipeline}.helper.publish-build'
                  block: true
                  block-thresholds:
                    failure-threshold: FAILURE
                  predefined-parameters: |
                    REQUESTED_BY={tag_requested_by}
                    BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                    BRANCH=$BRANCH
                    BUILD_IDENTITY=$BUILD_IDENTITY
                    CUSTOMIZATION=$CUSTOMIZATION
                    PLATFORM=$PLATFORM
                    BUILD_STATUS=passed
                    LOCAL_PATH=$WORKSPACE/
                    COMPONENTS=server-external/,webadmin-build.log,static/version.txt
                    NODE_SSH_CONNECTION=$SSH_CONNECTION
                    SSH_USER=$USER

    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - SUCCESS
          - UNSTABLE
          build-steps:
          - trigger-builds:
            - project: '{pipeline}.helper.build-reporter'
              block: '{synchronous-reporting}'
              predefined-parameters: |
                REQUESTED_BY={tag_requested_by}
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                BUILD_STATUS=passed
                RUNNER_URL=$RUNNER_URL
                JUNKSHOP_HOST=$JUNKSHOP_HOST
                JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - FAILURE
          build-steps:
          - trigger-builds:
            - project: '{pipeline}.helper.build-reporter'
              block: '{synchronous-reporting}'
              predefined-parameters: |
                REQUESTED_BY={tag_requested_by}
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                BUILD_STATUS=failed
                RUNNER_URL=$RUNNER_URL
                JUNKSHOP_HOST=$JUNKSHOP_HOST
                JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'
