- job-template:
    name: '{pipeline}.{branch}.vms.freeze_nx_vms_commit'
    job-maintainers: 'iremizov@networkoptix.com'
    description: |
      <pre>
      ================================================================================
      Freeze nx_vms commit
      ================================================================================

      JOB MAINTAINERS
        {job-maintainers}
        (notified by email on build failures)

      SOURCES
        devtools/infra/jenkins_jobs/servers/templates/freeze-vms-commit.yaml

      --------------------------------------------------------------------------------

      This job serves as for freezing particular commit based on abstract hg ref.

      This solves 2 problems

      * After some waiting time in queue builds may build not the commit they supposed
        to build, but commit that is assigned to ref by the time build really starts
      * Not all builds are started in the same time, so by the time different builds
        started there are different commits pointed by ref and this is not acceptable

      Frozen commit value (sha) is available in NX_VMS_COMMIT.envvar file represented
      in Jenkins envvar format (Var name, equals and var value not enclosed in quotes).

      To bypass pipeline descriptions from upstream builds there is BUILD_DESCRIPTION
      parameter. A string passed to BUILD_DESCRIPTION will be set as one of the lines
      of build description.

      Every build is connected with upstream builds by Jenkins internals, but due to
      some internal limitations it's recommended to use REQUESTED_BY argument.
      Trigger builds with some unique marker like $JOB_NAME-$BUILD_ID and then query
      latest artifact that has REQUESTED_BY equal to marker.

      This job also provides shasum for build configuration files.
      In build workspace one may compare "old" shasum calculated for sources of prev.
      build located in build workspace with "new" shasum calculated for sources for
      requested build.
      If shasums don't differ then incremental build is possible. otherwise all files
      from build dir should be removed.

      Example

      commit_hash_1 -> shasum_A -> build_1
      commit_hash_2 -> shasum_A -> build_2
      commit_hash_3 -> shasum_B -> build_3

      If in current build dir we have any build that have shasum_A and we want to
      build commit_hash_2 incrementally, then it's possible because it's hash is
      shasum_A. But it's impossible to build incrementally commit_hash_3 because it
      produces shasum_B that differs from shasum_A

      Shasum of build files is available in CMAKELISTS_SHA.envvar file represented
      in Jenkins envvar format (Var name, equals and var value not enclosed in quotes).

      --------------------------------------------------------------------------------
      </pre>
    node: '{commit-freeze-node}'
    concurrent: false  # important

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: 100

    parameters:
    - p_BUILD_DESCRIPTION
    - p_REQUESTED_BY
    - p_CLEAN_CLONE
    - p_NX_VMS_COMMIT:
        default: '{branch}'

    wrappers:
    # NOTE: There is abug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          JOB_MAINTAINERS={job-maintainers}
          PIPELINE={pipeline}
          BRANCH={branch}
    - timestamps
    - timeout:
        # normally should complete in 2-5 min
        timeout: 20 # min
        fail: true
        type: absolute
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - copy-hg-repo:
            name: nx_vms

    scm:
    - '{hg-pull-macro}':
        project-name: nx_vms
        branch-name: '$NX_VMS_COMMIT'

    builders:
    # Clean repository files as we don't need them actually
    # - folder-delete-operation:
    #     folder-path: $WORKSPACE/nx_vms
    - description-setter:
        description: |
          $BUILD_DESCRIPTION
    - shell: |
        #!/bin/bash
        set -ex
        echo "CMAKELISTS_SHA=$(find "${{WORKSPACE}}/nx_vms" -name CMakeLists.txt | xargs cat | shasum -a 256 | cut -f 1 -d " ")" > 'CMAKELISTS_SHA.envvar'
    - inject:
        properties-file: CMAKELISTS_SHA.envvar
    - description-setter:
        description: |
          CMakeLists.txt sha is $CMAKELISTS_SHA
    - shell: |
        #!/bin/bash
        set -ex
        echo "NX_VMS_COMMIT=${{MERCURIAL_REVISION_SHORT}}" > 'NX_VMS_COMMIT.envvar'
    - inject:
        properties-file: NX_VMS_COMMIT.envvar

    publishers:
    - publisher-set-build-name:
        name: '#$BUILD_ID $BRANCH@$NX_VMS_COMMIT'
    - archive:
        artifacts: 'NX_VMS_COMMIT.envvar,CMAKELISTS_SHA.envvar'
        allow-empty: 'false'
        fingerprint: true
    - failure-email(maintainers)