- job-template:
    name: 'helper.freeze-nx-vms-commit'
    job-maintainers: 'iremizov@networkoptix.com'
    description: |
      <pre>
      ================================================================================
      Freeze nx_vms commit
      ================================================================================

      JOB MAINTAINERS
        {job-maintainers}
        (notified by email on build failures)

      SOURCES
        devtools/infra/jenkins_jobs/servers/templates/freeze-vms-commit.yaml

      --------------------------------------------------------------------------------

      This job serves as for freezing particular commit based on abstract hg ref.

      This solves 2 problems

      * After some waiting time in queue builds may build not the commit they supposed
        to build, but commit that is assigned to ref by the time build really starts
      * Not all builds are started in the same time, so by the time different builds
        started there are different commits pointed by ref and this is not acceptable

      Frozen commit value (sha) is available in NX_VMS_COMMIT.envvar file represented
      in Jenkins envvar format (Var name, equals and var value not enclosed in quotes).

      To bypass pipeline descriptions from upstream builds there is BUILD_DESCRIPTION
      parameter. A string passed to BUILD_DESCRIPTION will be set as one of the lines
      of build description.

      Every build is connected with upstream builds by Jenkins internals, but due to
      some internal limitations it's recommended to use REQUESTED_BY argument.
      Trigger builds with some unique marker like $JOB_NAME-$BUILD_ID and then query
      latest artifact that has REQUESTED_BY equal to marker.

      --------------------------------------------------------------------------------
      </pre>
    node: '{commit-freeze-node}'
    concurrent: false  # important

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: 100

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_BRANCH
    - p_PIPELINE
    - p_REQUESTED_BY
    - p_CLEAN_CLONE
    - p_NX_VMS_COMMIT:
        default: ''

    wrappers:
    # NOTE: There is abug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          JOB_MAINTAINERS={job-maintainers}
    - timestamps
    - timeout:
        # normally should complete in 2-5 min
        timeout: 20 # min
        fail: true
        type: absolute
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - copy-hg-repo:
            name: nx_vms

    scm:
    - '{hg-pull-macro}':
        project-name: nx_vms
        branch-name: '$NX_VMS_COMMIT'

    builders:
    # Clean repository files as we don't need them actually
    # - folder-delete-operation:
    #     folder-path: $WORKSPACE/nx_vms
    - description-setter:
        description: |
          $BUILD_DESCRIPTION
    - shell: |
        #!/bin/bash
        set -ex
        function find_all_files() {{
          find "nx_vms" -type f -and \( -name 'CMakeLists.txt' -or -name '*.vcxproj' -or -name '*.cmake' -or -wholename '**/build_utils/**' \)
        }}
        echo "BUILD_CONFIG_SHA will be based on files"
        find_all_files
        echo "BUILD_CONFIG_SHA=$( find_all_files | xargs cat | shasum -a 256 | cut -f 1 -d " ")" > 'BUILD_CONFIG_SHA.envvar'
    - inject:
        properties-file: BUILD_CONFIG_SHA.envvar
    - description-setter:
        description: |
          CMakeLists.txt sha is $BUILD_CONFIG_SHA
    - shell: |
        #!/bin/bash
        set -ex
        echo "NX_VMS_COMMIT=${{MERCURIAL_REVISION_SHORT}}" > 'NX_VMS_COMMIT.envvar'
    - inject:
        properties-file: NX_VMS_COMMIT.envvar

    publishers:
    - publisher-set-build-name:
        name: '#$BUILD_ID $BRANCH@$NX_VMS_COMMIT'
    - archive:
        artifacts: 'NX_VMS_COMMIT.envvar,BUILD_CONFIG_SHA.envvar'
        allow-empty: 'false'
        fingerprint: true
    - failure-email-helpers(maintainers)