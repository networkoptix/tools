#
- job-template:
    name: '{pipeline}.{branch}.{project}.distribution.{customization}.realcameratest'
    description: |
      Run real camera tests for {customization} for branch {branch}.
    node: '{realcameratest-node}'
    concurrent: true

    init-venv-method: init-venv-linux
    binaries_url: 'rsync://noptix.enk.me/buildenv/test/'
    synchronous-reporting: '' # false
    workspace: 'nx_rct_thr${{EXECUTOR_NUMBER}}/'

    test-select-expr: not windows and not smb
    test-list: ''

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 1
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT
    - string:
        name: NX_TEST_FRAMEWORK_COMMIT

    wrappers:
    # NOTE: There is abug in jenkins: vars set here are read-only and can not be modified.
    # FIXME: add TEST_SELECT_EXPR for real camera tests
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          CUSTOMIZATION={customization}
          TEST_SELECT_EXPR="not some-stub-because-you-cannot-avoid-k-flag"
          TEST_LIST=cameras_integration/test_server.py::test_cameras
    - timestamps
    - timeout:
        timeout: 300 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - folder-delete-operation:
            folder-path: 'devtools'
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: '{branch}'
            basedir: $WORKSPACE
    scm:
    - hg-local:
        name: nx_vms
        revision: '$NX_TEST_FRAMEWORK_COMMIT'

    builders:
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - set-custom-build-description

    - folder-delete-operation:
        folder-path: 'build'

    - folder-delete-operation:
        folder-path: 'dist'

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT test@$NX_TEST_FRAMEWORK_COMMIT'
        macro: true

    - inject:
        properties-content: |
          JUNKSHOP_URL={junkshop_base_url}/{junkshop_location_root_pattern}
    - description-setter:
        description: >-
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          PIPELINE=$PIPELINE
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=linux-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/,build_info.yaml
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - file-copy-operation:
        includes: 'build/distrib/*-server-*-linux64*.deb'
        excludes: ''
        target-location: '$WORKSPACE/dist'
        flatten-files: 'true'

    - init-venv-linux:
        requirements-files: >-
          devtools/ci/junk_shop/requirements.txt
          nx_vms/func_tests/requirements.txt

    - shell: |
        #!/bin/bash
        set -ex
        echo "SERVER_DEB_PATH=$(readlink -f "$( \
          find $WORKSPACE/dist -name *-server-*-linux64*.deb \
        )")" > SERVER_DEB_PATH.envvar
    - inject:
        properties-file: SERVER_DEB_PATH.envvar

    - inject:
        # TODO:  '{cloud-group}'
        properties-content: |
          JUNK_SHOP_CAPTURE_DB=$JUNK_SHOP_DB_CREDENTIALS@{junk_shop_host}
          AUTOTEST_EMAIL_PASSWORD=4eAYstrPYsTEgU9i
          BIN_DIR=$WORKSPACE/funtest/bin
          WORK_DIR=$WORKSPACE/funtest/work
          CLOUD_GROUP=test
    - shell: |
        #!/bin/bash
        set -ex
        mkdir -p "$BIN_DIR"
        rsync -av --delete {binaries_url} "$BIN_DIR/"

    - inject:
        properties-content: |
          VERBOSE=true
          PYTEST_DEFAULTS_SECTION=ci

    - run-functional-tests:
        project: $JUNKSHOP_PROJECT_NAME  #'$PIPELINE'
        branch: '$BRANCH'
        build-num: $BUILD_IDENTITY
        customization: $CUSTOMIZATION
        platform: linux-x64 # Used when storing results to junk-shop only; All functional tests a tied to linux-x64
        cloud-group: $CLOUD_GROUP
        bin-dir: "$WORKSPACE/dist"
        work-dir: "$WORKSPACE/dist" # todo: move to /work
        mediaserver-dist-dir: "$WORKSPACE/dist"
        clean: true
        test-select-expr: $TEST_SELECT_EXPR
        test-list: $TEST_LIST
        test-timeout-hours: 4 # '{test-timeout-hours}'

    # TODO: reporting
    publishers:
    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'