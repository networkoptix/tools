- job-template:
    name: '{pipeline}.{branch}.{project}.distribution.{customization}.functest'
    description: |
      Run functional tests for {customization} for branch {branch}.
    node: '{functest-node}'
    concurrent: true

    binaries_url: 'rsync://noptix.enk.me/buildenv/test/'
    synchronous-reporting: '' # false
    workspace: 'nx_ft_thr${{EXECUTOR_NUMBER}}/'

    workdir: functests

    test-select-expr: not windows and not smb
    test-list: ''

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 1
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_CLEAN_WORKSPACE:
        default: true
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT
    - string:
        name: NX_TEST_FRAMEWORK_COMMIT
    - p_JUNKSHOP_HOST
    - p_JUNKSHOP_DB_HOST
    - p_TEST_SELECT_EXPR:
        default: '{test-select-expr}'
    - p_TEST_LIST:
        default: '{test-list}'

    wrappers:
    # NOTE: There is a bug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          CUSTOMIZATION={customization}
          PLATFORM=all
    - timestamps
    - timeout:
        timeout: 300 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN_WORKSPACE
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
      - text:
          credential-id: service_email
          variable: AUTOTEST_EMAIL_PASSWORD
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: '{branch}'
            basedir: $WORKSPACE
    scm:
    - hg-local:
        name: nx_vms
        revision: '$NX_TEST_FRAMEWORK_COMMIT'
    - hg-local:
        name: devtools
        revision: default

    builders:
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - inject:
        properties-content: |
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
    - set-custom-build-description

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT test@$NX_TEST_FRAMEWORK_COMMIT'
        macro: true

    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - kill-hanged-functests

    - folder-delete-operation:
        folder-path: 'build'
    - folder-delete-operation:
        folder-path: 'dist'
    - folder-create-operation:
        folder-path: 'dist'

    - folder-delete-operation:
        folder-path: '{workdir}'
    - folder-create-operation:
        folder-path: '{workdir}'

    - inject:
        properties-content: |
          JUNK_SHOP_CAPTURE_DB=$JUNK_SHOP_DB_CREDENTIALS@$JUNKSHOP_DB_HOST
          BIN_DIR=$WORKSPACE/bin
          WORK_DIR=$WORKSPACE/{workdir}
          CLOUD_GROUP=test

    - init-venv-linux:
        requirements-files: >-
          devtools/ci/junk_shop/requirements.txt
          nx_vms/func_tests/requirements.txt

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          PIPELINE=$PIPELINE
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=windows-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-win64*.exe
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

      - project: 'helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          PIPELINE=$PIPELINE
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=linux-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-linux64*.deb,bin/appserver2_ut
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - file-copy-operation:
        includes: >-
          build/distrib/*-server-*-linux64*.deb,
          build/distrib/*-server-*-win64*.exe,
          build/bin/appserver2_ut
        excludes: ''
        target-location: '$WORKSPACE/dist'
        flatten-files: 'true'

    - shell: |
        #!/bin/bash
        set -ex
        rsync -av {binaries_url} "$BIN_DIR/"

    - inject:
        properties-content: |
          VERBOSE=true
          PYTEST_DEFAULTS_SECTION=ci

    - run-functional-tests:
        project: $JUNKSHOP_PROJECT_NAME
        branch: '$BRANCH'
        build-num: $BUILD_IDENTITY
        customization: $CUSTOMIZATION
        platform: linux-x64 # Used when storing results to junk-shop only; All functional tests a tied to linux-x64
        cloud-group: $CLOUD_GROUP
        bin-dir: "$BIN_DIR"
        work-dir: "$WORK_DIR"
        mediaserver-dist-dir: "$WORKSPACE/dist"
        clean: true
        test-args: ''
        test-select-expr: $TEST_SELECT_EXPR
        test-list: $TEST_LIST
        test-timeout-hours: 4 # '{test-timeout-hours}'

    publishers:
    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - SUCCESS
          - UNSTABLE
          - FAILURE
          build-steps:
          - trigger-builds:
            - project: 'helper.push-component'
              predefined-parameters: |
                REQUESTED_BY={tag_requested_by}
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                PIPELINE=$PIPELINE
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                LOCAL_PATH=$WORKSPACE/
                COMPONENTS={workdir}/
                NODE_SSH_CONNECTION=$SSH_CONNECTION
                SSH_USER=$USER
              block: true
              block-thresholds:
                failure-threshold: FAILURE

    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'
