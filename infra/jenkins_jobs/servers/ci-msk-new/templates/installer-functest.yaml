- job-template:
    name: '{pipeline}.{version}.{project}.distribution.{customization}.functest'
    description: |
      Run functional tests for {customization} for branch {version}.
    node: '{functest_node}'
    concurrent: false

    binaries_url: 'rsync://noptix.enk.me/buildenv/test/'
    workspace: !j2: '{{ "__debug__" if __debug__ else "" }}functest{{
      "-thr${EXECUTOR_NUMBER}" if run_functests_concurrently else ""
      }}'
    run_functests_concurrently: true

    workdir: functests

    test-select-expr: not windows and not smb
    test-list: ''

    properties:
    - authorization-{pipeline}-system
    - priority-sorter:
        priority: !j2: '{{ pipeline_priority }}'
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default_artifact_num_to_keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_CLEAN_WORKSPACE:
        default: true
    - p_BUILD_IDENTITY
    - p_BRANCH:
        default: '{default_branch}'
    - p_NX_VMS_COMMIT
    - string:
        name: NX_TEST_FRAMEWORK_COMMIT
    - p_JUNKSHOP_HOST
    - p_JUNKSHOP_DB_HOST
    - p_TEST_SELECT_EXPR:
        default: '{test-select-expr}'
    - p_TEST_LIST:
        default: '{test-list}'
    - p_PIPELINE(hidden):
        default: '{pipeline}'
    - p_CUSTOMIZATION(hidden):
        default: '{customization}'
    - p_PLATFORM(hidden):
        default: all

    wrappers:
    - timestamps
    - timeout:
        timeout: 300 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN_WORKSPACE
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
      - text:
          credential-id: service_email
          variable: AUTOTEST_EMAIL_PASSWORD
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: $BRANCH
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE
    scm:
    - hg-local:
        name: nx_vms
        revision: '$NX_TEST_FRAMEWORK_COMMIT'
    - hg-local:
        name: devtools
        revision: default

    builders:
    - set-hg-marker-successful-checkout
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - inject:
        properties-content: |
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
    - set-custom-build-description

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT test@$NX_TEST_FRAMEWORK_COMMIT'
        macro: true

    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - kill-hanged-functests

    - shell: |
        #!/bin/bash
        set -ex
        rm -rf   "build" "dist" "{workdir}"
        mkdir -p "build" "dist" "{workdir}"

    - inject:
        properties-content: |
          BIN_DIR=$WORKSPACE/bin
          WORK_DIR=$WORKSPACE/{workdir}

    - trigger-builds:
      - project: '{pipeline}.helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=windows-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-win64*.exe
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

      - project: '{pipeline}.helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=linux-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-linux64*.deb,bin/appserver2_ut
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - file-copy-operation:
        includes: >-
          build/distrib/*-server-*-linux64*.deb,
          build/distrib/*-server-*-win64*.exe,
          build/bin/appserver2_ut
        excludes: ''
        target-location: '$WORKSPACE/dist'
        flatten-files: 'true'

    - shell: |
        #!/bin/bash
        set -ex
        rsync -av {binaries_url} "$BIN_DIR/"
        ln -sf "$WORKSPACE/dist/appserver2_ut" "$BIN_DIR/"  # vms_3.2 func tests requirement
        mkdir -p "$WORK_DIR"

        if [ ! -d venv ]; then
          # --system-site-packages  is required for 3.2 functests
          virtualenv --system-site-packages venv
        fi

        source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r devtools/ci/junk_shop/requirements.txt
          pip install --upgrade -r nx_vms/func_tests/requirements.txt

          export PYTHONPATH="$WORKSPACE/devtools/ci/junk_shop"
          export PYTEST_PLUGINS=junk_shop.pytest_plugin

          : "${{AUTOTEST_EMAIL_PASSWORD:?}}"  # password for cloud accont

          TEST_TIMEOUT="$((4 * 60 * 60))" # 4hr

          cd nx_vms/func_tests

            export PYTEST_DEFAULTS_SECTION=ci  # init CI config
            # These params are required only for functests from 3.2 branch
            # --mediaserver-dist-path
            # --customization
            # --cloud-group
            # --vm-port-base
            # --vm-name-prefix
            exec pytest \
              --work-dir="$WORK_DIR" \
              --bin-dir="$BIN_DIR" \
              --mediaserver-installers-dir="$WORKSPACE/dist" \
              --mediaserver-dist-path="$(echo "$WORKSPACE/dist/*-server-*.deb")" \
              --customization="$CUSTOMIZATION" \
              --cloud-group=test \
              --timeout="$TEST_TIMEOUT" \
              --capture-db="$JUNK_SHOP_DB_CREDENTIALS@$JUNKSHOP_DB_HOST" \
              --build-parameters="\
        project=$JUNKSHOP_PROJECT_NAME,\
        branch=$BRANCH,\
        build_num=$BUILD_IDENTITY,\
        platform=linux-x64,\
        customization=$CUSTOMIZATION" \
              --vm-port-base="$((20000 + "$EXECUTOR_NUMBER" * 100))" \
              --vm-name-prefix=funtest-$EXECUTOR_NUMBER- \
              --slot=$EXECUTOR_NUMBER \
              --reinstall \
              -v \
              -k "$TEST_SELECT_EXPR" \
              $TEST_LIST

    publishers:
    - delete-hg-repos(if-damaged)
    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - SUCCESS
          - UNSTABLE
          - FAILURE
          build-steps:
          - trigger-builds:
            - project: '{pipeline}.helper.publish-tests'
              predefined-parameters: |
                REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
                BRANCH=$BRANCH
                BUILD_IDENTITY=$BUILD_IDENTITY
                CUSTOMIZATION=$CUSTOMIZATION
                PLATFORM=$PLATFORM
                BRANCH=$BRANCH
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                LOCAL_PATH=$WORKSPACE/
                COMPONENTS={workdir}/
                NODE_SSH_CONNECTION=$SSH_CONNECTION
                SSH_USER=$USER
              block: true
              block-thresholds:
                failure-threshold: FAILURE

    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'
