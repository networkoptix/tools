- job-template:
    name: '{pipeline}.{branch}.vms.installer.{platform}.{customization}.unittest'
    description: |
      Run unit tests for {platform} for branch {branch}.

    node: unittests-linux
    concurrent: true

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 5
        option: category
        categories:
        - unittests-linux
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: 100

    parameters:
    - p_CLEAN_CLONE
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT

    wrappers:
    - build-name:
        name: '[${{BUILD_ID}}] {branch}-${{BUILD_IDENTITY}}@${{NX_VMS_COMMIT}}'
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    - workspace-cleanup
    - copy-hg-repo(1):
        name: devtools

    scm:
    - hg-la:
        project-name: devtools
        branch-name: default

    builders:

    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          PLATFORM={platform}
          CUSTOMIZATION={customization}
    - inject:
        properties-content: |
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
          JUNKSHOP_URL={junkshop_base_url}/{junkshop_location_root_pattern}

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          BUILD_IDENTITY=$BUILD_IDENTITY
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION
          COMPONENTS=distrib/,bin/,lib/,current_config.py
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - init-venv-linux:
        requirements-files: devtools/ci/junk_shop/requirements.txt
    - shell: |
        #!/bin/bash
        set -ex

        source venv/bin/activate
          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop
          BIN_DIR="$WORKSPACE/build/bin"
          CONFIG_PATH="$WORKSPACE/build/current_config.py"
          TIMEOUT=1m
          TEST_BINARY_LIST="$(cd $BIN_DIR && echo *_ut)"
          mkdir -p unit_tests
          cd unit_tests
          $WORKSPACE/devtools/ci/junk_shop/junk_shop/unittest_run.py --timeout=$TIMEOUT "$CONFIG_PATH" "$BIN_DIR" $TEST_BINARY_LIST

    # finally count unittests that did not show exit_code == 0
    # if there are no such tests, exit 0 otherwise fail build
    - shell: |
        #!/bin/bash
        set -ex
        failed_tests="$(cat $WORKSPACE/unit_tests/*_ut.yaml | grep exit_code | grep -v '^exit_code.* 0$' | wc -l)"
        exit $failed_tests

    publishers:
    # TODO: publish into other repo than default when build is failed
    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - FAILURE
          - SUCCESS
          - UNSTABLE
          build-steps:
          - trigger-builds:
            - project: 'helper.push-component'
              block: true
              predefined-parameters: |
                BUILD_IDENTITY=$BUILD_IDENTITY
                PLATFORM=$PLATFORM
                CUSTOMIZATION=$CUSTOMIZATION
                LOCAL_PATH=$WORKSPACE/
                COMPONENTS=unit_tests/
                NODE_SSH_CONNECTION=$SSH_CONNECTION
                SSH_USER=$USER
            - project: '{pipeline}.unittests-reporter'
              block: false
              predefined-parameters: |
                BRANCH=$BRANCH
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                BUILD_IDENTITY=$BUILD_IDENTITY
                PLATFORM=$PLATFORM
                CUSTOMIZATION=$CUSTOMIZATION
          - set-build-description