- job-template:
    name: '{pipeline}.{branch}.vms.installer.{platform}.{customization}.unittest'

    node: unittests-linux

    concurrent: true

    description: |
      Run unit tests for {platform} for branch {branch}.

    parameters:
    - p_CLEAN_CLONE
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT

    wrappers:
    - build-name:
        name: '[${{BUILD_ID}}] {branch}-${{BUILD_IDENTITY}}@${{NX_VMS_COMMIT}}'
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    - workspace-cleanup
    - copy-hg-repo(1):
        name: devtools

    scm:
    - hg-la:
        project-name: devtools
        branch-name: default

    builders:

    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          PLATFORM={platform}
          CUSTOMIZATION={customization}

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          BUILD_IDENTITY=$BUILD_IDENTITY
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION
          COMPONENTS=distrib/,bin/,lib/,current_config.py
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - init-venv-linux:
        requirements-files: devtools/ci/junk_shop/requirements.txt
    - shell: |
        #!/bin/bash
        set -ex

        source venv/bin/activate
          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop
          BIN_DIR="$WORKSPACE/build/bin"
          CONFIG_PATH="$WORKSPACE/build/current_config.py"
          TIMEOUT=3m
          TEST_BINARY_LIST="$(cd $BIN_DIR && echo *_ut)"
          mkdir -p unit_tests
          cd unit_tests
          $WORKSPACE/devtools/ci/junk_shop/junk_shop/unittest_run.py --timeout=$TIMEOUT "$CONFIG_PATH" "$BIN_DIR" $TEST_BINARY_LIST

    # If we put this trigger into publish step, other builds of this pipeline may start
    # before components published and will fail.
    # There are 2 options:
    # - add small pause between steps in pipeline and hope that arts. will be in time
    # - block build until "fat" artifact is published.
    - trigger-builds:
      - project: 'helper.push-component'
        predefined-parameters: |
          BUILD_IDENTITY=$BUILD_IDENTITY
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION
          LOCAL_PATH=$WORKSPACE/
          COMPONENTS=unit_tests/
          NODE_SSH_CONNECTION=$SSH_CONNECTION
          SSH_USER=$USER
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    # finally count unittests that did not show exit_code == 0
    # if there are no such tests, exit 0 otherwise fail build
    - shell: |
        #!/bin/bash
        set -ex
        failed_tests="$(cat $WORKSPACE/unit_tests/*_ut.yaml | grep exit_code | grep -v '^exit_code.* 0$' | wc -l)"
        exit $failed_tests

    publishers:
    - trigger-parameterized-builds:
      - project: '{pipeline}.unittests-reporter'
        condition: ALWAYS
        predefined-parameters: |
          BRANCH=$BRANCH
          NX_VMS_COMMIT=$NX_VMS_COMMIT
          BUILD_IDENTITY=$BUILD_IDENTITY
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION