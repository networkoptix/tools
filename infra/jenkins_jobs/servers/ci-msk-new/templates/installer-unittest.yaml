#
# IMPORTANT NOTE
#
# There are 2 job-templates defined in this file
#
- job-template: &installer_unittests_default
    id: installer-unittests-default
    name: '{pipeline}.{branch}.vms.installer.{platform}.{customization}.unittest'
    description: |
      Run unit tests for {platform} for branch {branch}.

    node: '{unittest-node}'
    concurrent: true

    unittest-launcher: unittest-launcher-default
    init-venv-method: init-venv-linux
    synchronous-reporting: '' # false

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 5
        option: category
        categories:
        - '{unittest-node}'
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: 100

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_BUILD_IDENTITY
    - p_NX_VMS_COMMIT

    wrappers:
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          BRANCH={branch}
          PLATFORM={platform}
          CUSTOMIZATION={customization}
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    # - workspace-cleanup # always
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - copy-hg-repo:
            name: devtools

    scm:
    - '{hg-pull-macro}':
        project-name: devtools
        branch-name: default

    builders:
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true

    - description-setter:
        description: |
          $BUILD_DESCRIPTION
    - inject:
        properties-content: |
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
          JUNKSHOP_URL={junkshop_base_url}/{junkshop_location_root_pattern}
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          BUILD_IDENTITY=$BUILD_IDENTITY
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION
          COMPONENTS=distrib/,bin/,lib/,current_config.py
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - '{unittest-launcher}'
    - count-fails

    publishers:
    - archive:
        artifacts: '*.envvar'
        allow-empty: 'false'
        fingerprint: true
    # TODO: publish into other repo than default when build is failed
    - postbuildscript:
        mark-unstable-if-failed: true
        builders:
        - role: SLAVE
          build-on:
          - FAILURE
          - SUCCESS
          - UNSTABLE
          build-steps:
          - trigger-builds:
            - project: 'helper.push-component'
              block: true
              predefined-parameters: |
                BUILD_IDENTITY=$BUILD_IDENTITY
                PLATFORM=$PLATFORM
                CUSTOMIZATION=$CUSTOMIZATION
                LOCAL_PATH=$WORKSPACE/
                COMPONENTS=unit_tests/
                NODE_SSH_CONNECTION=$SSH_CONNECTION
                SSH_USER=$USER
            - project: '{pipeline}.unittests-reporter'
              block: '{synchronous-reporting}'
              predefined-parameters: |
                BRANCH=$BRANCH
                NX_VMS_COMMIT=$NX_VMS_COMMIT
                BUILD_IDENTITY=$BUILD_IDENTITY
                PLATFORM=$PLATFORM
                CUSTOMIZATION=$CUSTOMIZATION
    publishers:
    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'

- job-template:
    <<: *installer_unittests_default
    # all the same, but not id, node and build steps..
    id: installer-unittests-windows
    unittest-launcher: unittest-launcher-windows
    hg-pull-macro: hg-la-anon
    init-venv-method: init-venv-windows