#
# DO NOT EDIT THIS TEMPLATE MANUALLY
# This configuration is autogenerated by helper script '../helpers/generate_release_runner.py'.
#
- job-template:
    name: '{pipeline}.{version}.{project}.runner'
    project-type: multijob
    description: |
      Entry point

    node: runner
    concurrent: true

    realcameratesting-framework-branch: $BRANCH

    properties:
    - priority-sorter:
        priority: !j2: '{{ pipeline_priority }}'
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 5
        option: project
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: 100

    parameters:
    - p_REQUESTED_BY
    - p_UPSTREAM_JOB_NAME
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_PLATFORMS:
        default: '{default-platforms}'
    - p_CUSTOMIZATIONS:
        default: '{default-customizations}'
    - p_BUILD_WEBADMIN:
        default: true
    - p_BUILD_INSTALLER:
        default: true
    - p_RUN_UNITTESTS:
        default: true
    - p_RUN_FUNCTESTS:
        default: false
    - p_RUN_REALCAMERATESTS:
        default: false
    - p_BRANCH:
        default: '{default-branch}'
    - p_USE_NX_VMS_COMMIT:
        default: '{default-branch}'
    - p_USE_BUILD_IDENTITY:
        default: NEW
    - p_CLEAN_WORKSPACE:
        default: false
    - p_CLEAN_BUILD:
        default: false
    - p_CLEAN_CLONE
    - p_CLOUD_GROUP:
        default: test
    - p_HARDWARE_SIGNING:
        default: 'OFF'
    - p_TRUSTED_TIMESTAMPING:
        default: 'OFF'
    - p_CUSTOM_CMAKE_PARAMETERS:
        default: ''
    - p_PIPELINE(hidden):
        default: '{pipeline}'

    wrappers:
    - timestamps
    # note: DO NOT ADD any timeouts here. Put them in corresponding child jobs.

    builders:
    - set-custom-build-description
    - custom-build-description:
        envvars: [ BUILD_URL ]
        action: append
        target: upstream
        description: >-
          <br> <a href='$BUILD_URL'>to runner</a>

    # inject as is
    - inject:
        properties-content: |
          BUILD_IDENTITY=$USE_BUILD_IDENTITY
          NX_VMS_COMMIT=$USE_NX_VMS_COMMIT

    # if it's auto, get from existing build
    - conditional-step:
        condition-kind: strings-match
        condition-string1: '${{NX_VMS_COMMIT}}'
        condition-string2: 'AUTO'
        steps:
        # Note, that we don't want to copy BUILD_IDENTITY. because we don't want
        # to override the one that came from args

        - copyartifact:
            project: '{pipeline}.{version}.{project}.register-build'
            filter: 'NX_VMS_COMMIT.envvar'
            which-build: last-successful
            parameter-filters: >-
              BUILD_IDENTITY=$USE_BUILD_IDENTITY
            optional: false
        - inject:
            properties-file: 'NX_VMS_COMMIT.envvar'

    # Freeze nx realcamera framework commit
    - freeze-nx-vms-commit(remote):
        pipeline: '{pipeline}'
        tag_requested_by: '{tag_requested_by}'
        branch: '{realcameratesting-framework-branch}'
        commit-to-freeze: '{realcameratesting-framework-branch}'
        commit-varname: NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT

    # Build identity may be defained in args, or use NEW keqyword,
    # which means that we need to create one..
    - conditional-step:
        condition-kind: strings-match
        condition-string1: '${{USE_BUILD_IDENTITY}}'
        condition-string2: 'NEW'
        steps:
        - multijob:
            name: Request new release build id
            projects:
            - name: '{pipeline}.build_number.generator'
              kill-phase-on: FAILURE
              predefined-parameters: |
                REQUESTED_BY={tag_requested_by}
                BUILD_DESCRIPTION=$BUILD_DESCRIPTION
        - copyartifact:
            project: '{pipeline}.build_number.generator'
            filter: 'BUILD_IDENTITY.envvar'
            which-build: last-completed
            parameter-filters: REQUESTED_BY={tag_requested_by}
        - inject:
            properties-file: 'BUILD_IDENTITY.envvar'

    # At this point we know BUILD_IDENTITY and NX_VMS_COMMIT
    # TODO: Should we fetch all links from publisher or something like that?
    - inject:
        properties-content: |
          JUNKSHOP_HOST={junk_shop_host}
          JUNKSHOP_DB_HOST={junkshop_db_host}
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - inject:
        properties-content: |
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_root_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_root_pattern}
          REPOSITORY_ROOT_URL={artifact_repository_base_url}/{artifact_location_root_pattern}

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true

    - description-setter:
        description: |
          $PLATFORMS $CUSTOMIZATIONS for $NX_VMS_COMMIT ($USE_NX_VMS_COMMIT)

    # At this step we will register id->commit or fail if we have wrong commit for this id.
    - build-registry-add:
        pipeline: '{pipeline}'
        version: '{version}'
        branch: $BRANCH
        project: '{project}'
        build-identity: $BUILD_IDENTITY
        nx-vms-commit: $NX_VMS_COMMIT

    # TODO: we don't need to build webadmin for macOS. But it's not enough to disable it here
    # because artifact is mandatory in build installers.
    - multijob:
        name: Build web admin
        projects:
        - name: '{pipeline}.{version}.{project}.webadmin.universal.build'
          enable-condition: >-
            ("$BUILD_WEBADMIN").toBoolean()
          kill-phase-on: FAILURE
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL

    - multijob:
        name: Run all VMS distribution related jobs
        condition: COMPLETED # allow unstable
        projects:

        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x64.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.linux-x86.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("linux-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bananapi.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bananapi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.bpi.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("bpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.rpi.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("rpi") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.edge1.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("edge1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.tx1.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("tx1") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.android-arm.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("android-arm") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x64.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x64") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.windows-x86.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("windows-x86") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.mac.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("mac") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.default.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.default_cn.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.default_zh_CN.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.cox.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.digitalwatchdog.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.digitalwatchdog_global.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.hanwha.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.ipera.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.ionetworks.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.nutech.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.ras.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.senturian.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.systemk.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.tricom.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.ust.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.vista.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.vmsdemoblue.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.vmsdemoorange.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.metavms.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


        - name: '{pipeline}.{version}.{project}.distribution.ios.xcello.all'
          kill-phase-on: NEVER
          enable-condition: >-
            ("$PLATFORMS     ").trim().split(",").contains("ios") &&
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$BUILD_INSTALLER").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            CUSTOM_CMAKE_PARAMETERS=$CUSTOM_CMAKE_PARAMETERS
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUN_UNITTESTS=$RUN_UNITTESTS
            RUNNER_URL=$BUILD_URL
            CLOUD_GROUP=$CLOUD_GROUP
            HARDWARE_SIGNING=$HARDWARE_SIGNING
            TRUSTED_TIMESTAMPING=$TRUSTED_TIMESTAMPING


    - multijob:
        name: Run all VMS distribution functional tests
        projects:


        - name: '{pipeline}.{version}.{project}.distribution.default.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.default.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.default_cn.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.default_cn.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_cn") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.default_zh_CN.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.default_zh_CN.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("default_zh_CN") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.cox.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.cox.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("cox") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.digitalwatchdog.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.digitalwatchdog.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.digitalwatchdog_global.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.digitalwatchdog_global.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("digitalwatchdog_global") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.hanwha.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.hanwha.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("hanwha") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.ipera.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.ipera.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ipera") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.ionetworks.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.ionetworks.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ionetworks") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.nutech.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.nutech.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("nutech") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.ras.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.ras.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ras") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.senturian.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.senturian.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("senturian") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.systemk.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.systemk.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("systemk") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.tricom.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.tricom.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("tricom") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.ust.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.ust.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("ust") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.vista.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.vista.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vista") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.vmsdemoblue.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.vmsdemoblue.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoblue") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.vmsdemoorange.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.vmsdemoorange.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("vmsdemoorange") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.metavms.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.metavms.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("metavms") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


        - name: '{pipeline}.{version}.{project}.distribution.xcello.functest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$RUN_FUNCTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST

        - name: '{pipeline}.{version}.{project}.distribution.xcello.realcameratest'
          condition: COMPLETED # allow unstable
          kill-phase-on: NEVER
          enable-condition: >-
            ("$CUSTOMIZATIONS").trim().split(",").contains("xcello") &&
            ("$RUN_REALCAMERATESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            NX_TEST_FRAMEWORK_COMMIT=$NX_VMS_REAL_CAMERA_TEST_FRAMEWORK_COMMIT
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_BUILD=$CLEAN_BUILD
            CLEAN_CLONE=$CLEAN_CLONE
            RUNNER_URL=$BUILD_URL
            JUNKSHOP_HOST=$JUNKSHOP_HOST
            JUNKSHOP_DB_HOST=$JUNKSHOP_DB_HOST


    publishers:
    - groovy-postbuild:
        script: !include-raw-escape: ../builders/report_all_links.groovy
    - display-upstream-changes
    - archive:
        artifacts: '*.envvar'
        allow-empty: 'false'
        fingerprint: true
    - completed-email(group)

