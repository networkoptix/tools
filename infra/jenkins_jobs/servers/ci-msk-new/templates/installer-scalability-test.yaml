- job-template:
    name: '{pipeline}.{version}.{project}.distribution.{customization}.scalability-test'
    description: |
      Run scalability tests for {customization} for {version}.
    node: '{functest-node}'
    concurrent: false

    binaries_url: 'rsync://noptix.enk.me/buildenv/test/'
    workspace: 'workspace/scalability'

    workdir: work

    test-config: '../config/scalability-test.yaml.inc'

    properties:
    - authorization-{pipeline}-system
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 1
        option: category
        categories:
        - scalability
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_WORKSPACE:
        default: true
    - p_BUILD_IDENTITY
    - p_BRANCH:
        default: '{default-branch}'
    - p_NX_VMS_COMMIT:
        default: ''
    - string:
        name: NX_TEST_FRAMEWORK_COMMIT
    - p_JUNKSHOP_HOST
    - p_JUNKSHOP_DB_HOST

    wrappers:
    # NOTE: There is a bug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          CUSTOMIZATION={customization}
          PLATFORM=all
    - timestamps
    - timeout:
        timeout: 420 # min
        fail: true
        type: absolute
    - workspace-cleanup:
        check-parameter: CLEAN_WORKSPACE
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS
      - text:
          credential-id: service_email
          variable: AUTOTEST_EMAIL_PASSWORD
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: '{version}'
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE
    scm:
    - hg-local:
        name: nx_vms
        revision: '$NX_TEST_FRAMEWORK_COMMIT'
    - hg-local:
        name: devtools
        revision: default

    builders:
    - set-hg-marker-successful-checkout
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - inject:
        properties-content: |
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
    - set-custom-build-description

    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT test@$NX_TEST_FRAMEWORK_COMMIT'
        macro: true

    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>

    - kill-hanged-functests

    - shell: |
        #!/bin/bash
        set -ex
        for dir in "build" "dist" "{workdir}" ; do
          rm -rf "$dir"
          mkdir -p "$dir"
        done

    - inject:
        properties-content: |
          BIN_DIR=$WORKSPACE/bin
          WORK_DIR=$WORKSPACE/{workdir}

    - trigger-builds:
      - project: '{pipeline}.helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=linux-x64
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/build/
          COMPONENTS=distrib/*-server-*-linux64*.deb,bin/appserver2_ut
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - file-copy-operation:
        includes: >-
          build/distrib/*-server-*-linux64*.deb,
          build/bin/appserver2_ut
        excludes: ''
        target-location: '$WORKSPACE/dist'
        flatten-files: 'true'

    - shell: |
        #!/bin/bash
        set -ex
        rsync -av {binaries_url} "$BIN_DIR/"

    - file-create-operation:
        file-name: test-config.yaml
        file-content: |
          tests:
            scalability_test:
              merge_timeout: 1h
              host_list:
                - name: kappa
                  address: 192.168.13.8
                  username: jenkins
                  key_path: /home/jenkins/.ssh/id_rsa
                  dir: /home/jenkins/scalability
                  server_bind_address: 192.168.20.3
                  server_port_base: 7001
                  lws_port_base: 8001
                - name: sigma
                  address: 192.168.13.9
                  username: jenkins
                  key_path: /home/jenkins/.ssh/id_rsa
                  dir: /home/jenkins/scalability
                  server_bind_address: 192.168.20.4
                  server_port_base: 7001


    - run-scalability-tests:
        use-lightweight-servers: 'true'  # note: string type
        server-count: 50
    - run-scalability-tests:
        use-lightweight-servers: 'true'  # note: string type
        server-count: 100
    - run-scalability-tests:
        use-lightweight-servers: 'true'  # note: string type
        server-count: 150
    - run-scalability-tests:
        use-lightweight-servers: 'true'  # note: string type
        server-count: 200

    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 20
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 40
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 60
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 80
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 100
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 120
    - run-scalability-tests:
        use-lightweight-servers: 'false'  # note: string type
        server-count: 140

    publishers:
    - delete-hg-repos(if-damaged)

    - failure-email:
        email-recipients: '{build-watchers}'
    - fixed-email:
        email-recipients: '{build-watchers}'

