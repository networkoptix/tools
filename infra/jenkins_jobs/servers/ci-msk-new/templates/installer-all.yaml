
- job-template:
    name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.all'
    project-type: multijob

    node: runner
    concurrent: true

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 5
        option: category
        # limit this job to have only 5 exec+queued actual builds
        categories:
        - '{installer-build-node}'
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_WORKSPACE:
        default: false
    - p_CLEAN_CLONE
    - p_CLEAN_BUILD:
        default: false
    - p_BUILD_IDENTITY
    - p_BRANCH:
        default: '{default-branch}'
    - p_NX_VMS_COMMIT:
        default: '{default-branch}'
    - p_RUN_UNITTESTS:
        default: true
    - p_RUNNER_URL

    wrappers:
    - timestamps
    # note: DO NOT ADD any timeouts here. Put them in corresponding child jobs.

    builders:
    - inject:
        properties-content: |
          PIPELINE={pipeline}
          CUSTOMIZATION={customization}
          PLATFORM={platform}
    - inject:
        properties-content: |
          JUNKSHOP_HOST={junk_shop_host}
          JUNKSHOP_DB_HOST={junkshop_db_host}
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true
    - set-custom-build-description

    - multijob:
        name: "Build installer for {platform} with {customization}"
        projects:
        - name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.build'
          kill-phase-on: FAILURE
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_CLONE=$CLEAN_CLONE
            CLEAN_BUILD=$CLEAN_BUILD
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            RUNNER_URL=$RUNNER_URL

    - multijob:
        name: Run tests (tests are optional, only existing jobs are built)
        condition: COMPLETED # allow unstable
        projects:
        - name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.unittest' # TODO:
          kill-phase-on: NEVER
          enable-condition: >-
            ("$RUN_UNITTESTS").toBoolean()
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_CLONE=$CLEAN_CLONE
            CLEAN_BUILD=$CLEAN_BUILD
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            RUNNER_URL=$RUNNER_URL

        - name: '{pipeline}.{version}.{project}.distribution.{platform}.{customization}.perftest' # TODO:
          kill-phase-on: NEVER
          predefined-parameters: |
            REQUESTED_BY={tag_requested_by}
            BUILD_DESCRIPTION=$BUILD_DESCRIPTION
            CLEAN_WORKSPACE=$CLEAN_WORKSPACE
            CLEAN_CLONE=$CLEAN_CLONE
            CLEAN_BUILD=$CLEAN_BUILD
            BUILD_IDENTITY=$BUILD_IDENTITY
            BRANCH=$BRANCH
            NX_VMS_COMMIT=$NX_VMS_COMMIT
            RUNNER_URL=$RUNNER_URL
