- job-template:
    name: 'helper.unittests-reporter'

    node: unittests-reporter
    workspace: 'nx_report_thr${{EXECUTOR_NUMBER}}/'
    concurrent: true

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 25
        artifact-days-to-keep: 10
        artifact-num-to-keep: '{default-artifact-num-to-keep}'

    parameters:
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_PIPELINE
    - p_BRANCH
    - p_NX_VMS_COMMIT
    - p_BUILD_IDENTITY
    - p_CUSTOMIZATION
    - p_PLATFORM
    - p_BUILD_STATUS
    - p_RUNNER_URL # do we need it here?

    wrappers:
    - build-name:
        name: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    - workspace-cleanup
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: junk_shop_db_credentials
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            basedir: $WORKSPACE

    scm:
    - hg-local-no-changelog:
        name: devtools
        revision: 'default'

    builders:
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - set-custom-build-description

    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          PIPELINE=$PIPELINE
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=$PLATFORM
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/
          PLATFORM=$PLATFORM
          CUSTOMIZATION=$CUSTOMIZATION
          COMPONENTS=unit_tests/*.yaml,unit_tests/*.output,unit_tests/*.bt
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - init-venv-linux:
        requirements-files: devtools/ci/junk_shop/requirements.txt
    - shell: |
          #!/bin/bash
          set -ex

          source venv/bin/activate
            export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop

            if [ "$PIPELINE" == 'develop' ] ; then
              JUNKSHOP_PROJECT=ci
            else
              JUNKSHOP_PROJECT="$PIPELINE"
            fi

            if [ "$PLATFORM" == 'universal' ] ; then
              JUNKSHOP_PLATFORM=webadmin
            else
              JUNKSHOP_PLATFORM="$PLATFORM"
            fi

            DB_CONFIG=$junk_shop_db_credentials@{junk_shop_host}
            BUILD_PARAMETERS=project=$JUNKSHOP_PROJECT,branch=$BRANCH,build_num=$BUILD_IDENTITY,customization=$CUSTOMIZATION,platform=$JUNKSHOP_PLATFORM

            cd unit_tests
            $WORKSPACE/devtools/ci/junk_shop/junk_shop/unittest_save_results.py "$DB_CONFIG" "$BUILD_PARAMETERS"

    publishers:
    - description-setter:
        description: >-
          <a href='{artifact_repository_base_path}/{artifact_location_full_pattern}'> Artifacts </a>,
          <a href='{junkshop_base_url}/{junkshop_location_root_pattern}'> Junkshop </a>
    - failure-email-helpers(maintainers):
        email-recipients: '{job-maintainers}'