- job-template:
    name: 'helper.pull-component'

    node: repository-ops
    concurrent: true

    properties:
    - heavy-job:
        weight: 1
    - build-discarder:
        days-to-keep: 30
        num-to-keep: 100
        artifact-days-to-keep: 30
        artifact-num-to-keep: '{default-artifact-num-to-keep}'
    - throttle:
        max-total: 3
        option: project

    parameters:
    - p_REQUESTED_BY
    - p_BUILD_DESCRIPTION:
        default: ''
    # Parameters related to artifact location in repository
    - p_PIPELINE
    - p_BRANCH
    - p_BUILD_IDENTITY
    - p_CUSTOMIZATION
    - p_PLATFORM
    - p_COMPONENTS
    # Parameter that defines path to operate it's actually remote path
    - p_LOCAL_PATH
    # Utility parameters used to describe connection details
    - p_NODE_SSH_CONNECTION
    - p_SSH_USER
    - string:
        name: ALLOW_MISSING
        default: 'NO'
        description: >-
          SHould build suppress fail and don't stop when some components are not found and may not be imported?

    wrappers:
    - build-name:
        name: '#$BUILD_ID $BUILD_IDENTITY $BRANCH $PLATFORM $CUSTOMIZATION'
    - timestamps
    - timeout:
        # normally, should complete in 5-10 min
        timeout: 30 # min
        fail: true
        type: absolute
    - ssh-agent-credentials:
        users:
        - jenkins

    builders:
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
    - set-custom-build-description
    - shell: |
        #!/bin/bash
        set -ex
        for var in  REQUESTED_BY    \
                    BRANCH          \
                    PIPELINE        \
                    BUILD_IDENTITY  \
                    CUSTOMIZATION   \
                    COMPONENTS      ; do
          echo "Checking $var to be defined and filled correctly; value is ${{!var}}"
          test "${{!var}}" != '$'"${{var}}" # ~ "$REQUESTED_BY" != '$REQUESTED_BY'
          test "${{!var}}" != ''            # ~ "$REQUESTED_BY" != ''
        done
    - inject:
        properties-content: |
          REPOSITORY_PATH={artifact_repository_base_path}/{artifact_location_full_pattern}
          JUNKSHOP_URL={junkshop_base_url}/{junkshop_location_root_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}

    - rsync-upload:
        host: '$(echo "${{NODE_SSH_CONNECTION}}" | cut -d " " -f 3)'
        port: '$(echo "${{NODE_SSH_CONNECTION}}" | cut -d " " -f 4)'
        user: '${{SSH_USER}}'
        src_path: '${{REPOSITORY_PATH}}'
        dst_path: '${{LOCAL_PATH}}'
        components: '${{COMPONENTS}}'
        allow_missing: '${{ALLOW_MISSING}}'

    publishers:
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='{junkshop_base_url}/{junkshop_location_root_pattern}'> Junkshop </a>
    - failure-email-helpers(maintainers):
        email-recipients: '{job-maintainers}'