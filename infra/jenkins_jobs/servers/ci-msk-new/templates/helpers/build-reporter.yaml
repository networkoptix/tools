- job-template:
    name: 'helper.build-reporter'
    job-maintainers: 'iremizov@networkoptix.com'
    description: |
      <pre>
      ================================================================================
      Build reporter
      ================================================================================

      JOB MAINTAINERS
        {job-maintainers}
        (notified by email on build failures)

      SOURCES
        devtools/infra/jenkins_jobs/servers/templates/helpers/build-reporter.yaml

      ONLY FAILED BUILDS MAY BE RETRIGGERED/RETRIED

      If build failed by infrastracture reasons anyone may try to retrigger uploading
      process.

      --------------------------------------------------------------------------------

      This job serves for parsing and uploading build results into JunkShop service.

      To bypass pipeline descriptions from upstream builds there is BUILD_DESCRIPTION
      parameter. A string passed to BUILD_DESCRIPTION will be set as one of the lines
      of build description.

      Every build is connected with upstream builds by Jenkins internals, but due to
      some internal limitations it's recommended to use REQUESTED_BY argument.
      Trigger builds with some unique marker like $JOB_NAME-$BUILD_ID and then query
      latest artifact that has REQUESTED_BY equal to marker.

      --------------------------------------------------------------------------------
      </pre>
    node: unittests-reporter
    concurrent: true
    workspace: 'nx_report_thr${{EXECUTOR_NUMBER}}/'

    # junk_shop_host: required!

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 25
        artifact-days-to-keep: 10
        artifact-num-to-keep: 25

    parameters:
    - p_REQUESTED_BY
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_PIPELINE
    - p_BRANCH
    - p_BUILD_IDENTITY
    - p_CUSTOMIZATION
    - p_PLATFORM
    - p_NX_VMS_COMMIT
    - p_RUNNING_NUM
    - string:
        name: LOGFILE
        description: |
          Logfile that contains information about build
    - p_BUILD_STATUS

    wrappers:
    # NOTE: There is a bug in jenkins: vars set here are read-only and can not be modified.
    - inject:
        properties-content: |
          JOB_MAINTAINERS={job-maintainers}
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    # - workspace-cleanup
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: junk_shop_db_credentials
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: $BRANCH
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            basedir: $WORKSPACE

    scm:
    - hg-local-no-changelog:
        name: nx_vms
        revision: '$NX_VMS_COMMIT'
    - hg-local:
        name: devtools
        revision: 'default'

    builders:
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true
    - trigger-builds:
      - project: 'helper.pull-component'
        predefined-parameters: |
          BRANCH=$BRANCH
          PIPELINE=$PIPELINE
          BUILD_IDENTITY=$BUILD_IDENTITY
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=$PLATFORM
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/
          COMPONENTS=$LOGFILE
          NODE_SSH_CONNECTION=$SSH_CONNECTION
          BUILD_STATUS=$BUILD_STATUS
          RUNNING_NUM=$RUNNING_NUM
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - init-venv-linux:
        requirements-files: devtools/ci/junk_shop/requirements.txt
    - shell: |
        #!/bin/bash
        set -ex

        source venv/bin/activate
          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop

          DB_CONFIG=$junk_shop_db_credentials@{junk_shop_host}
          REVISION="$(cd nx_vms && hg id --id)"

          if [ "$PIPELINE" == 'develop' ] ; then
            JUNKSHOP_PROJECT=ci
          else
            JUNKSHOP_PROJECT="$PIPELINE"
          fi

          # register build
          BUILD_PARAMETERS="project=$JUNKSHOP_PROJECT,branch=$BRANCH,build_num=$BUILD_IDENTITY,platform=$PLATFORM,jenkins_url=$JOB_URL,repository_url=ssh://hg@hdw.mx/nx_vms,revision=$REVISION"
          devtools/ci/junk_shop/junk_shop/save_build_info.py "$DB_CONFIG" "$BUILD_PARAMETERS" nx_vms

          # upload build results
          BUILD_PARAMETERS="project=$PIPELINE,branch=$BRANCH,build_num=$BUILD_IDENTITY,customization=$CUSTOMIZATION,platform=$PLATFORM"
          devtools/ci/junk_shop/junk_shop/build.py "$DB_CONFIG" "$BUILD_PARAMETERS" "$LOGFILE" "--outcome=$BUILD_STATUS"

    publishers:
    - failure-email-helpers(maintainers)