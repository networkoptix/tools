- job-template:
    name: '{pipeline}.helper.build-reporter'
    description: |
      <pre>
      ================================================================================
      Build reporter
      ================================================================================

      JOB MAINTAINERS
        {job-maintainers}
        (notified by email on build failures)

      SOURCES
        devtools/infra/jenkins_jobs/servers/templates/helpers/build-reporter.yaml

      ONLY FAILED BUILDS MAY BE RETRIGGERED/RETRIED

      If build failed by infrastracture reasons anyone may try to retrigger uploading
      process.

      --------------------------------------------------------------------------------

      This job serves for parsing and uploading build results into JunkShop service.

      To bypass pipeline descriptions from upstream builds there is BUILD_DESCRIPTION
      parameter. A string passed to BUILD_DESCRIPTION will be set as one of the lines
      of build description.

      Every build is connected with upstream builds by Jenkins internals, but due to
      some internal limitations it's recommended to use REQUESTED_BY argument.
      Trigger builds with some unique marker like $JOB_NAME-$BUILD_ID and then query
      latest artifact that has REQUESTED_BY equal to marker.

      Known issues

      - unknown revision '<rev-sha>' - means that branch have 2+ heads and prev build
      is done from other head that's not parent for current.

      --------------------------------------------------------------------------------
      </pre>
    node: unittests-reporter
    concurrent: true
    workspace: 'nx_{pipeline}_report_thr${{EXECUTOR_NUMBER}}/'

    # junk_shop_host: required!

    properties:
    - authorization-{pipeline}-system
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 10
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 500
        artifact-days-to-keep: 10
        artifact-num-to-keep: 500

    parameters:
    - p_REQUESTED_BY
    - p_BUILD_DESCRIPTION:
        default: ''
    - p_CLEAN_CLONE
    - p_BRANCH
    - p_BUILD_IDENTITY
    - p_CUSTOMIZATION
    - p_PLATFORM
    - p_NX_VMS_COMMIT
    - p_BUILD_STATUS
    - p_RUNNER_URL
    - p_JUNKSHOP_HOST
    - p_JUNKSHOP_DB_HOST
    - p_PIPELINE(hidden):
        default: '{pipeline}'

    wrappers:
    - timestamps
    - timeout:
        timeout: 20 # min
        fail: true
        type: absolute
    - credentials-binding:
      - username-password:
          credential-id: junk_shop_db
          variable: junk_shop_db_credentials
    - pre-scm-buildstep:
        failOnError: true
        buildsteps:
        - custom-clean-workspace:
            keep_files: [ nx_vms, devtools, venv ]
        - import-hg-repo(if-missing):
            name: nx_vms
            branch: $BRANCH
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE
        - import-hg-repo(if-missing):
            name: devtools
            branch: default
            platform: $PLATFORM
            customization: $CUSTOMIZATION
            pipeline: '{pipeline}'
            basedir: $WORKSPACE

    scm:
    - hg-local-no-changelog:
        name: nx_vms
        revision: '$NX_VMS_COMMIT'
    - hg-local:
        name: devtools
        revision: 'default'

    builders:
    - set-hg-marker-successful-checkout
    - inject:
        properties-content: |
          JUNKSHOP_PROJECT_NAME={junkshop_project_name}
          JUNKSHOP_BASE_URL=http://$JUNKSHOP_HOST
    - inject:
        properties-content: |
          JUNKSHOP_URL=$JUNKSHOP_BASE_URL/{junkshop_location_full_pattern}
          REPOSITORY_URL={artifact_repository_base_url}/{artifact_location_full_pattern}
    - set-custom-build-description
    - build-name-setter:
        template: '#$BUILD_ID $BRANCH-$BUILD_IDENTITY@$NX_VMS_COMMIT'
        macro: true
    - trigger-builds:
      - project: '{pipeline}.helper.pull-component'
        predefined-parameters: |
          REQUESTED_BY={tag_requested_by}
          BUILD_DESCRIPTION=$BUILD_DESCRIPTION
          BRANCH=$BRANCH
          BUILD_IDENTITY=$BUILD_IDENTITY
          PIPELINE=$PIPELINE
          CUSTOMIZATION=$CUSTOMIZATION
          PLATFORM=$PLATFORM
          SSH_USER=$USER
          LOCAL_PATH=$WORKSPACE/
          COMPONENTS=*.log,build_logs/
          NODE_SSH_CONNECTION=$SSH_CONNECTION
        block: true
        block-thresholds:
          failure-threshold: FAILURE

    - shell: |
        #!/bin/bash
        set -ex

        rm -f full_build.log
        touch full_build.log

        for logfile in  webadmin-build.log	             \
                        build_logs/cleaner.log           \
                        build_logs/cmake-configure.log   \
                        build_logs/ninja_clean.log       \
                        build_logs/cmake-build.log       ; do
          if [ -f $logfile ] ; then
            cat $logfile >> full_build.log
          fi
        done

        if [ ! -d venv ]; then
          virtualenv --system-site-packages venv
        fi

        source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r devtools/ci/junk_shop/requirements.txt

          export PYTHONPATH=$WORKSPACE/devtools/ci/junk_shop

          DB_CONFIG=$junk_shop_db_credentials@$JUNKSHOP_DB_HOST
          REVISION="$(cd nx_vms && hg id --id)"

          if [ "$PLATFORM" == 'universal' ] ; then
            JUNKSHOP_PLATFORM=webadmin
          else
            JUNKSHOP_PLATFORM="$PLATFORM"
          fi

          # register build
          BUILD_PARAMETERS="project=$JUNKSHOP_PROJECT_NAME,branch=$BRANCH,build_num=$BUILD_IDENTITY,platform=$JUNKSHOP_PLATFORM,jenkins_url=$RUNNER_URL,repository_url=ssh://hg@hdw.mx/nx_vms,revision=$REVISION"
          devtools/ci/junk_shop/junk_shop/save_build_info.py "$DB_CONFIG" "$BUILD_PARAMETERS" nx_vms

          # upload build results
          BUILD_PARAMETERS="project=$JUNKSHOP_PROJECT_NAME,branch=$BRANCH,build_num=$BUILD_IDENTITY,customization=$CUSTOMIZATION,platform=$JUNKSHOP_PLATFORM"
          devtools/ci/junk_shop/junk_shop/build.py "$DB_CONFIG" "$BUILD_PARAMETERS" full_build.log "--outcome=$BUILD_STATUS"

    publishers:
    - delete-hg-repos(if-damaged)
    - custom-clean-workspace:
        keep_files: [ nx_vms, devtools, venv ]
    - description-setter:
        description: >-
          <a href='$REPOSITORY_URL'> Artifacts </a>,
          <a href='$JUNKSHOP_URL'> Junkshop </a>
    - failure-email-helpers(maintainers):
        email-recipients: '{job-maintainers}'
