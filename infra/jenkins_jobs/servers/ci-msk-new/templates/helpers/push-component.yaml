- job-template:
    name: 'helper.push-component'

    node: repository-ops
    concurrent: false  # important

    properties:
    - heavy-job:
        weight: 1
    - throttle:
        max-total: 1
        option: project
    - build-discarder:
        days-to-keep: 10
        num-to-keep: 50
        artifact-days-to-keep: 10
        artifact-num-to-keep: 50

    parameters:
    - p_REQUESTED_BY
    - p_BUILD_STATUS
    - p_BUILD_DESCRIPTION:
        default: ''
    # Parameters related to artifact location in repository
    - p_PIPELINE
    - p_BRANCH
    - p_BUILD_IDENTITY
    - p_PLATFORM
    - p_CUSTOMIZATION
    - p_COMPONENTS
    # Parameter that defines path to operate it's actually remote path
    - p_LOCAL_PATH
    # Utility parameters used to describe connection details
    - p_NODE_SSH_CONNECTION
    - p_SSH_USER

    - administrative-section-separator
    - string:
        name: FORCE_PUSH
        default: 'false'
        description: "Delete existing artifacts before pushing."

    wrappers:
    - build-name:
        name: '#$BUILD_ID $BUILD_IDENTITY $BRANCH $PLATFORM $CUSTOMIZATION'
    - timestamps
    - timeout:
        # normally, should complete in 2-10 min
        timeout: 30 # min
        fail: true
        type: absolute
    - ssh-agent-credentials:
        users:
        - jenkins

    builders:
    - inject:
        properties-content: |
          RUNNING_NUM=$BUILD_ID
    - shell: |
          echo "RUNNING_NUM=${{RUNNING_NUM}}" > RUNNING_NUM.envvar
    - shell: |
        #!/bin/bash
        set -ex
        for var in  REQUESTED_BY    \
                    BRANCH          \
                    PIPELINE        \
                    BUILD_IDENTITY  \
                    CUSTOMIZATION   \
                    COMPONENTS      ; do
          echo "Checking $var to be defined and filled correctly; value is ${{!var}}"
          test "${{!var}}" != '$'"${{var}}" # ~ "$REQUESTED_BY" != '$REQUESTED_BY'
          test "${{!var}}" != ''            # ~ "$REQUESTED_BY" != ''
        done

    - shell: |
        #!/bin/bash
        if [ "${{BUILD_STATUS}}" == 'passed' ] ; then
          REPOSITORY_PATH="{artifact_repository_base_path}/{artifact_location_full_pattern}"
          REPOSITORY_URL="{artifact_repository_base_url}/{artifact_location_full_pattern}"
        else
          REPOSITORY_PATH="{artifact_repository_base_path}/{artifact_location_full_pattern_failed}"
          REPOSITORY_URL="{artifact_repository_base_url}/{artifact_location_full_pattern_failed}"
        fi
        echo "REPOSITORY_PATH=${{REPOSITORY_PATH}}" > REPOSITORY_PATH.envvar
        echo "REPOSITORY_URL=${{REPOSITORY_URL}}" > REPOSITORY_URL.envvar
    - inject:
        properties-file: REPOSITORY_PATH.envvar
    - inject:
        properties-file: REPOSITORY_URL.envvar

    - description-setter:
        description: |
          $REPOSITORY_URL

    - rsync-download:
        host: '$(echo "${{NODE_SSH_CONNECTION}}" | cut -d " " -f 3)'
        port: '$(echo "${{NODE_SSH_CONNECTION}}" | cut -d " " -f 4)'
        user: '${{SSH_USER}}'
        src_path: '${{LOCAL_PATH}}'
        dst_path: '${{REPOSITORY_PATH}}'
        components: '${{COMPONENTS}}'
        force: '$FORCE_PUSH'
        allow_missing: 'YES'

    publishers:
    - archive:
        artifacts: 'REPOSITORY_PATH.envvar'
        allow-empty: 'false'
        fingerprint: true
    - archive:
        artifacts: 'REPOSITORY_URL.envvar'
        allow-empty: 'false'
        fingerprint: true
    - archive:
        artifacts: 'RUNNING_NUM.envvar'
        allow-empty: 'false'
        fingerprint: true

    - failure-email-helpers(maintainers)