- job-template:
    # The main purpose of this job is emulate behaviour that's available in
    # git, svn and other scm plugins.
    # This job filters paths from changes in particular branch and
    # then triggers crsp. preset.
    # This job may be dropped if we move to git.

    # Other important thing is that this job will not have noop builds.
    # When something is happened in Repo, then something will be triggered.

    name: '__{pipeline}.helper.hg-trigger.{repo}.{branch}'
    id: hg-trigger
    node: '{hg_local_cache_node_write}'
    workspace: !j2: '{{ hg_local_cache_node_workspace }}'
    concurrent: false

    timer: ''  # defaults to no timer
    poll_scm_timer: '* * * * *'  # defaults to every sec

    triggers:
    - timed: "{timer}"
    - pollscm:
        cron: "{poll_scm_timer}"
        ignore-post-commit-hooks: True

    properties:
    - authorization-{pipeline}-system

    parameters:
    - p_BUILD_DESCRIPTION:
        default: Triggered by push event

    wrappers:
    - timestamps
    - timeout:
        # normally should complete in <1 min, but in case of clean clone this may not work
        # if there is no repo cloned yet, copy/clone it manually or change timeout
        timeout: 5 # min
        fail: true
        type: absolute

    scm:
    - hg-la:
        project-name: nx_vms
        branch-name: '{branch}'

    builders:
    - custom-clean-workspace:
        keep_files: [ devtools, nx_vms ]

    # TODO: We have macro for this but it has not very clear behaviour w/ sideffects
    # TODO: Convert this to macro

    # get prev commit
    - shell: |
        #!bash
        set -ex
        mkdir -p old
    - copyartifact:
        project: '$JOB_NAME'
        filter: 'NX_VMS_COMMIT.envvar'
        target: old
        which-build: last-successful
        optional: true
    - shell: |
        #!bash
        set -ex
        if [ -f old/NX_VMS_COMMIT.envvar ] ; then
          cat old/NX_VMS_COMMIT.envvar | sed 's/NX_VMS_COMMIT=/NX_VMS_COMMIT_OLD=/g' > NX_VMS_COMMIT_OLD.envvar
        else
          touch NX_VMS_COMMIT_OLD.envvar
        fi
        rm -rf old
    - inject:
        properties-file: NX_VMS_COMMIT_OLD.envvar

    # get current commit
    - inject:
        properties-content: |
          NX_VMS_COMMIT=$MERCURIAL_REVISION_SHORT
    - shell: |
        #!bash
        set -ex
        echo "NX_VMS_COMMIT=$NX_VMS_COMMIT" > NX_VMS_COMMIT.envvar
    - shell: |
        #!bash
        set -ex
        cd nx_vms
        VMS_VERSION="$(grep 'project(vms VERSION .*)' "CMakeLists.txt" | sed -E 's/.*VERSION ([0-9.]+)+\)/\1/')"
        echo echo "VMS_VERSION=$VMS_VERSION" > VMS_VERSION.envvar

    # Trigger functests
    - conditional-step:
        condition-kind: shell
        condition-command: !j2: |
          #!bash
          set -ex
          cd nx_vms
          hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" func_tests | grep -q 'files changed'
        steps:
        - trigger-builds:
          - project: '{pipeline}.{version}.preset.on-push-rct'
            predefined-parameters: |
              REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
              BUILD_DESCRIPTION=$BUILD_DESCRIPTION
              RCT_COMMIT_OPTION=$NX_VMS_COMMIT
            block: false

    # Trigger realcameratests
    - conditional-step:
        condition-kind: shell
        condition-command: !j2: |
          #!bash
          set -ex
          cd nx_vms
          hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" func_tests | grep -q 'files changed'
        steps:
        - trigger-builds:
          - project: '{pipeline}.{version}.preset.on-push-ft'
            predefined-parameters: |
              REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
              BUILD_DESCRIPTION=$BUILD_DESCRIPTION
              FT_COMMIT_OPTION=$NX_VMS_COMMIT
            block: false

    # Trigger VMS
    - conditional-step:
        condition-kind: shell
        condition-command: !j2: |
          #!bash
          set -ex
          cd nx_vms
          hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" --exclude path:func_tests | grep -q 'files changed'
        steps:
        - trigger-builds:
          - project: '{pipeline}.{version}.preset.on-push-vms'
            predefined-parameters: |
              REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
              BUILD_DESCRIPTION=$BUILD_DESCRIPTION
              VMS_BUILD_OPTION=$NX_VMS_COMMIT
            block: false

    publishers:
    - archive:
        artifacts: '*.envvar'
        allow-empty: 'false'
        fingerprint: true
    - failure-email-helpers(maintainers):
        email-recipients: '{job_maintainers}'

