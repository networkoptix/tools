- job-template:
    name: '__{pipeline}.helper.hg-trigger.{repo}.{branch}'
    id: hg-trigger
    description: |
      The main purpose of this job is emulate behaviour that's available in
      git, svn and other scm plugins.
      This job filters paths from changes in particular branch and
      then triggers crsp. preset.
      This job may be dropped if we move to git.

      Other important thing is that this job will not have noop builds.
      When something is happened in Repo, then something will be triggered.

    node: '{hg_local_cache_node_write}'
    workspace: !j2: '{{ hg_local_cache_node_workspace }}'
    concurrent: false


    triggers:
    - timed: !j2: "{{ timer | default('') }}"
    - pollscm:
        cron: !j2: "{{ poll_scm_timer | default('* * * * *') }}"
        ignore-post-commit-hooks: True

    properties:
    - authorization-{pipeline}-system

    parameters:
    - p_BUILD_DESCRIPTION:
        default: Triggered by push event

    wrappers:
    - timestamps
    - timeout:
        # normally should complete in <1 min, but in case of clean clone this may not work
        # if there is no repo cloned yet, copy/clone it manually or change timeout
        timeout: 5 # min
        fail: true
        type: absolute

    scm:
    - hg-la:
        project-name: nx_vms
        branch-name: '{branch}'

    builders:
    - custom-clean-workspace:
        keep_files: [ devtools, nx_vms ]

    # TODO: We have macro for this but it has not very clear behaviour w/ sideffects
    # TODO: Convert this to macro

    # get prev commit
    - shell: mkdir -p old
    - copyartifact:
        project: '$JOB_NAME'
        filter: 'NX_VMS_COMMIT.envvar'
        target: old
        which-build: last-successful
        optional: true
    - shell: |
        #!bash
        set -ex
        if [ -f old/NX_VMS_COMMIT.envvar ] ; then
          cat old/NX_VMS_COMMIT.envvar | sed 's/NX_VMS_COMMIT=/NX_VMS_COMMIT_OLD=/g' > NX_VMS_COMMIT_OLD.envvar
        else
          touch NX_VMS_COMMIT_OLD.envvar
        fi
        rm -rf old
    - inject:
        properties-file: NX_VMS_COMMIT_OLD.envvar

    # get current commit
    - shell: echo "NX_VMS_COMMIT=$MERCURIAL_REVISION_SHORT" > NX_VMS_COMMIT.envvar
    - inject:
        properties-file: NX_VMS_COMMIT.envvar

    # TODO: This is not used yet
    - parse-vms-version

    # Trigger Build
    - conditionally-trigger(shell):
      shell: cd nx_vms && hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" --exclude path:func_tests | grep -q 'files changed'
      project: '{pipeline}.{version}.preset.on-push-rct'
      parameters: |
        REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
        BUILD_DESCRIPTION=$BUILD_DESCRIPTION
        VMS_BUILD_OPTION=$NX_VMS_COMMIT

    # Trigger FT
    - conditionally-trigger(shell):
      shell: cd nx_vms && hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" func_tests | grep -q 'files changed'
      project: '{pipeline}.{version}.preset.on-push-ft'
      parameters: |
        REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
        BUILD_DESCRIPTION=$BUILD_DESCRIPTION
        FT_COMMIT_OPTION=$NX_VMS_COMMIT

    # Trigger RCT
    - conditionally-trigger(shell):
      shell: cd nx_vms && hg diff --stat -r  "${NX_VMS_COMMIT}:${NX_VMS_COMMIT_OLD}" func_tests | grep -q 'files changed'
      project: '{pipeline}.{version}.preset.on-push-rct'
      parameters: |
        REQUESTED_BY=$JOB_NAME-$BUILD_NUMBER
        BUILD_DESCRIPTION=$BUILD_DESCRIPTION
        RCT_COMMIT_OPTION=$NX_VMS_COMMIT

    publishers:
    - archive:
        artifacts: '*.envvar'
        allow-empty: 'false'
        fingerprint: true
    - failure-email-helpers(maintainers):
        email-recipients: '{job_maintainers}'

