# run scalability test as downstream job
# params:
# * branch
# * platform
# * upstream-jenkins
# * upstream-project
# * customization


- job-template:
    name: '{branch}-scalability'
    node: scalability # spin_ubuntu_16

    description: |
      Run scalability tests using {upstream-jenkins} Jenkins artifacts.

    parameters:
      - bool:
          name: CLEAN
          default: false
          description: Clean workspace before build
      - string:
          name: UPSTREAM_PROJECT
          default: '{upstream-project}'
          description: Name of upstream project to take artifacts to test from.
      - string:
          name: UPSTREAM_BUILD_NUMBER
          default: lastCompletedBuild
          description: BUILD_NUMBER of upstream project to take artifacts to test from. Default is last completed build.
      - string:
          name: CUSTOMIZATION
          default: '{customization}'
          description: Customization to test.

    wrappers:
    - build-keeper:
        policy: by-day
        build-period: 10
    - timeout:
        timeout: 300  # minutes
    - timestamps
    - credentials-binding:
      - username-password-separated:
          credential-id: megatron-jenkins-login
          username: UPSTREAM_USER
          password: UPSTREAM_PASSWORD
      - username-password:
          credential-id: junk_shop_db
          variable: JUNK_SHOP_DB_CREDENTIALS

    triggers:
    - reverse:
        jobs: '{upstream-project}/{branch}'
        result: failure  # some platforms may be failed, but still ours may be built

    scm:
    - hg-la:
        project-name: devtools
        branch-name: default
    - hg-la:
        project-name: nx_vms
        branch-name: '{branch}'

    builders:

      - shell: |
          #!/bin/bash
          set -ex

          rm -rf dist/build_info.yaml bin/mediaserver.deb
          mkdir -p dist work

      - init-venv-linux:
          requirements-files: >-
            devtools/ci/junk_shop/requirements.txt
            nx_vms/func_tests/requirements.txt

      - wget-artifact:
          upstream-jenkins: '{upstream-jenkins}'
          upstream-project: $UPSTREAM_PROJECT
          upstream-user: $UPSTREAM_USER
          upstream-password: $UPSTREAM_PASSWORD
          branch: '{branch}'
          build-num: $UPSTREAM_BUILD_NUMBER
          dest-dir: dist
          artifact: build_info.yaml

      - parse-build-info:
          branch: '{branch}'
          customization: $CUSTOMIZATION
          platform: '{platform}'
      - shell: |
          set -xe
          if [ -z "$SERVER_DEB_PATH" ]; then
            echo "Error: upstream job $UPSTREAM_PROJECT/{branch} #$BUILD_NUM did not left mediaserver distributive for customization $CUSTOMIZATION"
            exit 1
          fi

          if [ -z "$APPSERVER2_UT_PATH" ]; then
            echo "Error: upstream job $UPSTREAM_PROJECT/{branch} #$BUILD_NUM did not left appserver2_ut test for customization $CUSTOMIZATION"
            exit 1
          fi

      - wget-artifact:
          upstream-jenkins: '{upstream-jenkins}'
          upstream-project: $UPSTREAM_PROJECT
          upstream-user: $UPSTREAM_USER
          upstream-password: $UPSTREAM_PASSWORD
          branch: '{branch}'
          build-num: $BUILD_NUM
          dest-dir: dist
          artifact: $SERVER_DEB_PATH
      - wget-artifact:
          upstream-jenkins: '{upstream-jenkins}'
          upstream-project: $UPSTREAM_PROJECT
          upstream-user: $UPSTREAM_USER
          upstream-password: $UPSTREAM_PASSWORD
          branch: '{branch}'
          build-num: $BUILD_NUM
          dest-dir: dist
          artifact: $APPSERVER2_UT_PATH

      - shell: |
          #!/bin/bash
          set -ex

          mkdir -p bin
          chmod +x $(pwd)/dist/appserver2_ut  # wget does not preserve permissions
          ln -sf $(pwd)/dist/appserver2_ut bin/appserver2_ut
          ln -sf $(pwd)/dist/$(basename $SERVER_DEB_PATH) bin/mediaserver.deb
      - inject:
          properties-content: |
            JUNK_SHOP_CAPTURE_DB=$JUNK_SHOP_DB_CREDENTIALS@{junk-shop-host}
            BRANCH={branch}
            BUILD_NUM=$BUILD_NUM
            CUSTOMIZATION=$CUSTOMIZATION
            PLATFORM={platform}

      - run-scalability-test:
          use_lightweight_servers: 'true'
          server_count: 50
      - run-scalability-test:
          use_lightweight_servers: 'true'
          server_count: 100
      - run-scalability-test:
          use_lightweight_servers: 'true'
          server_count: 150
      - run-scalability-test:
          use_lightweight_servers: 'true'
          server_count: 200
      - run-scalability-test:
          use_lightweight_servers: 'true'
          server_count: 250
      - run-scalability-test:
          use_lightweight_servers: 'false'
          server_count: 20
      - run-scalability-test:
          use_lightweight_servers: 'false'
          server_count: 40
      - run-scalability-test:
          use_lightweight_servers: 'false'
          server_count: 60
      - run-scalability-test:
          use_lightweight_servers: 'false'
          server_count: 80
      - run-scalability-test:
          use_lightweight_servers: 'false'
          server_count: 100

    publishers:
    - archive:
        allow-empty: true
        artifacts: 'scalability.envfile'
        latest-only: false
    - archive:
        allow-empty: true
        artifacts: 'dist/build_info.yaml'
        latest-only: false
