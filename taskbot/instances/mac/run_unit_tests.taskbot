# -*- sh -*-

set -o errexit +o nounset -o noclobber
ARGS="$TASKBOT_OPTIONS $TASKBOT_CONFIG"

# + Prepare test environment

CURRENT_CONFIG="$TASKBOT_VAR"/nx_vms/build_variables/target/current_config

NX_VMS_LIB_PATH=$(grep linux_lib_dir= "$CURRENT_CONFIG" | sed 's/linux_lib_dir=//')
echo $NX_VMS_LIB_PATH

QT_LIB_PATH=$(grep qt_lib= "$CURRENT_CONFIG" | sed 's/qt_lib=//')
echo $QT_LIB_PATH

UNIT_TESTS_RESULT_PATH="$TASKBOT_VAR"/var/utests

if [ ! -d "$UNIT_TESTS_RESULT_PATH" ]; then
  mkdir -p "$UNIT_TESTS_RESULT_PATH"
else
  rm -rf "$UNIT_TESTS_RESULT_PATH"/*
fi

NX_VMS_BIN_PATH=$(grep bin_dir= "$CURRENT_CONFIG" | sed -E 's/bin_dir="?([^"]+)"?/\1/')
cd $NX_VMS_BIN_PATH

TEST_LIST=$TASKBOT_UNIT_TESTS
if [ "$TASKBOT_UNIT_TESTS" = "all" ]; then
  TEST_LIST=$(find . -name '*_ut' -type f -exec basename {} \;)
fi
echo $TEST_LIST

#ulimit -c unlimited
ulimit -n 10000
# + Run tests
for test in $TEST_LIST
do
  test_tmp=$UNIT_TESTS_RESULT_PATH/$test
  mkdir -p $test_tmp
  "$TASKBOT" $TASKBOT_OPTIONS $TASKBOT_CONFIG \
     -d "$test"  \
     -c "./$test --gtest_filter=-NxCritical.All3 --gtest_shuffle --tmp=$test_tmp" \
     --var "DYLD_LIBRARY_PATH=$NX_VMS_LIB_PATH" \
     --var "DYLD_FRAMEWORK_PATH=$QT_LIB_PATH" \
     -t 600 -s 100 --core_on_timeout || true
  sleep 10
  dt=$((`date +%s` + -60))
  ts=$(date -r $dt +%Y%m%d%H%M.%S)
  touch -t $ts $test_tmp/$test$ts
  find /Library/Logs/DiagnosticReports \
       -name "$test*.crash" \
       -newer "$test_tmp/$test$ts" \
       -exec cp '{}' $test_tmp \;
  find $HOME/Library/Logs/DiagnosticReports \
       -name "$test*.crash" \
       -newer "$test_tmp/$test$ts" \
       -exec mv '{}' $test_tmp \;
done

# + Process core files
"$TASKBOT" $ARGS "$TASKBOT_SHARE"/process_cores.taskbot
