# -*- sh -*-

set -o errexit +o nounset -o noclobber
ARGS="$TASKBOT_OPTIONS $TASKBOT_CONFIG"

# + Prepare test environment

QT_DIR=$(grep qt_dir= "$TASKBOT_VAR"/nx_vms/build_variables/target/current_config | sed -r 's/qt_dir=//')

QT_LIB=`find "$QT_DIR" -name 'libQt*.so' -print | head -n 1`
if [ -n "$QT_LIB" ]; then
  QT_LIB_PATH=$(dirname "$QT_LIB")
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$QT_LIB_PATH
fi

NX_VMS_LIB_PATH="$TASKBOT_VAR"/nx_vms/build_environment/target/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$NX_VMS_LIB_PATH

echo $LD_LIBRARY_PATH

UNIT_TESTS_RESULT_PATH="$TASKBOT_VAR"/var/utests

if [ ! -d "$UNIT_TESTS_RESULT_PATH" ]; then 
  mkdir -p "$UNIT_TESTS_RESULT_PATH"
else
  rm -rf "$UNIT_TESTS_RESULT_PATH"/*
fi

# + Run tests
cd "$TASKBOT_VAR"/nx_vms/build_environment/target/bin/release
for test in $(find . -name '*_ut' -type f)
do
  name=$(basename $test)
  "$TASKBOT" -d $name $TASKBOT_OPTIONS $TASKBOT_CONFIG \
     -c "$test --gtest_output=xml:$UNIT_TESTS_RESULT_PATH/$name.xml --gtest_filter=-NxCritical.All3" || true
done

# + Store results
for xml in $(find "$UNIT_TESTS_RESULT_PATH" -name '*.xml' -type f)
do
 filename=$(basename $xml)
 name=${filename%.*}
 "$TASKBOT" -d $name $TASKBOT_OPTIONS $TASKBOT_CONFIG \
   -c "cat $xml" --trace
done

# + Process core files
"$TASKBOT" $ARGS "$TASKBOT_SHARE"/process_cores.taskbot




