# -*- sh -*-

set -o errexit +o nounset -o noclobber
ARGS="$TASKBOT_OPTIONS $TASKBOT_CONFIG"

# + Prepare environment
if [ -d "$TASKBOT_VAR"/var/testing ]; then
  cd "$TASKBOT_VAR"/var/testing/vagrant
  set +o errexit
  vagrant destroy -f
  set -o errexit
  rm -rvf "$TASKBOT_VAR"/var/testing
fi

cp -r $TASKBOT_REPO/testing "$TASKBOT_VAR"/var/testing

if [ -e "$TASKBOT_VAR"/var/testing/testconf_local.py ]; then 
  rm -rf "$TASKBOT_VAR"/var/testing/testconf_local.py
fi

cd "$TASKBOT_VAR"/var/testing

BOX_SUFFIX=$(echo $TASKBOT_BRANCHNAME | sed -r 's/\./_/g')
BOX1="box1_$BOX_SUFFIX"
BOX2="box2_$BOX_SUFFIX"
NAT="nat_$BOX_SUFFIX"
BEHIND="behind_$BOX_SUFFIX"

cat << EOF > testconf_local.py
BOX_NAMES = {
    "Box1": "$BOX1",
    "Box2": "$BOX2",
    "Nat": "$NAT",
    "Behind": "$BEHIND"
}
BOX_IP = {
  'Box1': '192.168.120.$[$TASKBOT_BOX_BASE + 1]',
  'Box2': '192.168.120.$[$TASKBOT_BOX_BASE + 2]',        
  'Nat': '192.168.120.$[$TASKBOT_BOX_BASE + 3]',
  'Nat2': '192.168.121.$[$TASKBOT_BOX_BASE + 1]',
  'Behind': '192.168.121.$[$TASKBOT_BOX_BASE + 2]'
  }
EOF

cat testconf_local.py

./sync.sh

# + Start virual boxes
cd "$TASKBOT_VAR"/var/testing
./auto.py --boxes --path $TASKBOT_VAR/nx_vms

FUNC_TESTS_RESULT_PATH="$TASKBOT_VAR"/var/ftests
if [ ! -d "$FUNC_TESTS_RESULT_PATH" ]; then 
  mkdir -p "$FUNC_TESTS_RESULT_PATH"
else
  rm -rf "$FUNC_TESTS_RESULT_PATH"/*
fi

# + Run tests
cd $TASKBOT_VAR/nx_vms/func_tests
./functest.py --list-auto-test | \
while read line
do
 key=$(echo $line | sed -r 's|(--\w+)\s(.+)|\1|')
 name=$(echo $line | sed -r 's|(--\w+)\s(.+)|\2|')
 "$TASKBOT" $TASKBOT_OPTIONS $TASKBOT_CONFIG \
   -d "$name"  \
   -c "./functest.py --config=functest-tmp.cfg $key --log=\"$FUNC_TESTS_RESULT_PATH/$name.log\"" \
   -t 600 || true
done

# + Store results
$TASKBOT_BIN/file.py \
     $TASKBOT_CONFIG \
    --path $FUNC_TESTS_RESULT_PATH \
    --mask '*.log'

# + Destroy virtual boxes
cd "$TASKBOT_VAR"/var/testing/vagrant
vagrant destroy -f
