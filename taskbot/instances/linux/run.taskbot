# -*- sh -*-

set +o errexit -o nounset -o noclobber
ARGS="$TASKBOT_OPTIONS $TASKBOT_CONFIG"

set +o nounset
if [ -z $TASKBOT_UNIT_TESTS ]; then
   export TASKBOT_UNIT_TESTS="none"
fi
if [ -z $TASKBOT_FUNC_TESTS_OLD ]; then
   export TASKBOT_FUNC_TESTS_OLD="false"
fi
if [ -z $TASKBOT_STORE_ARTEFACTS ]; then
   export TASKBOT_STORE_ARTEFACTS="false"
fi
set -o nounset

# + Save update info
"$TASKBOT" $ARGS "$TASKBOT_COMMONS"/scripts/remember_revisions.taskbot
RC=$?
echo $RC

"$TASKBOT_COMMONS"/reports/update_report.py "$TASKBOT_CONFIG"

# + Build product
if [ $RC -eq 0 ]; then
  "$TASKBOT" $ARGS "$TASKBOT_COMMONS"/scripts/build.taskbot
  RC=$?
  echo $RC
fi

"$TASKBOT_COMMONS"/reports/build_report.py "$TASKBOT_CONFIG"

# + Run unit tests
UT_RC=0
if [ "$TASKBOT_UNIT_TESTS" != "none" ] && [ $RC -eq 0 ]; then
  "$TASKBOT" $ARGS "$TASKBOT_SHARE"/run_unit_tests.taskbot
  UT_RC=$?
fi

if [ "$TASKBOT_UNIT_TESTS" != "none" ]; then
  "$TASKBOT_COMMONS"/reports/unit_tests_report.py "$TASKBOT_CONFIG"
fi

# + Store artefacts
if [ $TASKBOT_STORE_ARTEFACTS = "true" ] && [ $RC -eq 0 ] && [ $UT_RC -eq 0 ]; then
  "$TASKBOT" $ARGS "$TASKBOT_SHARE"/store_artefacts.taskbot
fi

# + Run functional test old
FT_RC_OLD=0
if [ $TASKBOT_FUNC_TESTS_OLD = "true" ] && [ $RC -eq 0 ]; then
  "$TASKBOT" $ARGS "$TASKBOT_SHARE"/run_func_tests_old.taskbot
  FT_RC_OLD=$?
fi

if [ $TASKBOT_FUNC_TESTS_OLD = "true" ]; then
  "$TASKBOT_SHARE"/func_tests_report_old.py "$TASKBOT_CONFIG"
fi

set +o nounset
let "RC|=$UT_RC" || true
let "RC|=$FT_RC_OLD" || true
set -o nounset

exit $RC
