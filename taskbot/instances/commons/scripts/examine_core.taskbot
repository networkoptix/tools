# -*- sh -*-

# + Prepare variables
set -o errexit -o nounset -o noclobber
CORE=$1
TASK_ID=$("$TASKBOT_COMMONS"/reports/task_report.py "$TASKBOT_CONFIG")
[ "${CORE:0:1}" = "/" ] && CORE_PATH=$(dirname $CORE) || CORE_PATH="$PWD/$(dirname $CORE)"
CORE_FILE=$(basename $CORE)
CORE_STORAGE="$TASKBOT_VAR"/cores

# + Remove old core files
"$TASKBOT" $TASKBOT_OPTIONS $TASKBOT_CONFIG \
  "$TASKBOT_COMMONS/scripts"/clean_file_storage.taskbot "$CORE_STORAGE"

mkdir -p "$CORE_STORAGE/$TASK_ID"
mv "$CORE_PATH/$CORE_FILE" "$CORE_STORAGE/$TASK_ID"

echo "Core file is stored at $CORE_STORAGE/$TASK_ID/$CORE_FILE"; echo
CORE="$CORE_STORAGE/$TASK_ID/$(basename $CORE)"

# + Examine core file
export PATH="$PATH:$CORE_PATH"
CORE=$CORE_STORAGE/$TASK_ID/$CORE_FILE
echo $(file $CORE); echo
stat --format '%s bytes (%b x %B used), dumped on %y' "$CORE" | \
  sed -e 's/\..*//'; echo
APP=$(gdb -c "$CORE" -ex quit 2>/dev/null | \
    perl -ne "print \$1 if m|^Core was generated by .(?:[^/][^ ]*/)?([^ ']+)|")
gdb "$APP" "$CORE" \
  -ex 'set print static-members off' \
  -ex 'echo \n-- current thread backtrace --\n' \
  -ex 'bt' \
  -ex 'echo \n-- backtraces of all threads --\n' \
  -ex 'thread apply all backtrace' \
  -ex 'echo \n-- full backtraces of all threads --\n' \
  -ex 'thread apply all backtrace full' \
  -ex 'quit' |
  sed -ne '/^Core was generated by /,$p'
